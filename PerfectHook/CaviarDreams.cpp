#include "CaviarDreams.h"


/* C:\Users\Thomas\Desktop\TRAGIC.PW\badcache.ttf (31/03/2018 8:27:54 AM)
StartOffset: 00000000, EndOffset: 000013DB, Length: 000013DC */

unsigned char CaviarDreams[5084] =
{
	0x00, 0x01, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x80, 0x00, 0x03, 0x00, 0x20,
	0x4F, 0x53, 0x2F, 0x32, 0x56, 0xB5, 0x63, 0x3C, 0x00, 0x00, 0x01, 0x28,
	0x00, 0x00, 0x00, 0x56, 0x63, 0x6D, 0x61, 0x70, 0x02, 0xED, 0x09, 0xE7,
	0x00, 0x00, 0x01, 0x9C, 0x00, 0x00, 0x01, 0x5A, 0x67, 0x6C, 0x79, 0x66,
	0xBB, 0xAE, 0x93, 0x72, 0x00, 0x00, 0x03, 0x08, 0x00, 0x00, 0x0E, 0x2C,
	0x68, 0x65, 0x61, 0x64, 0x0D, 0xB2, 0xED, 0xE8, 0x00, 0x00, 0x00, 0xD0,
	0x00, 0x00, 0x00, 0x36, 0x68, 0x68, 0x65, 0x61, 0x08, 0xC6, 0x03, 0xA0,
	0x00, 0x00, 0x00, 0xAC, 0x00, 0x00, 0x00, 0x24, 0x68, 0x6D, 0x74, 0x78,
	0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x1C,
	0x6C, 0x6F, 0x63, 0x61, 0x0D, 0xB8, 0x10, 0xBC, 0x00, 0x00, 0x02, 0xF8,
	0x00, 0x00, 0x00, 0x10, 0x6D, 0x61, 0x78, 0x70, 0x01, 0x1F, 0x01, 0x9D,
	0x00, 0x00, 0x01, 0x08, 0x00, 0x00, 0x00, 0x20, 0x6E, 0x61, 0x6D, 0x65,
	0x13, 0x59, 0xEE, 0xEE, 0x00, 0x00, 0x11, 0x34, 0x00, 0x00, 0x02, 0x6D,
	0x70, 0x6F, 0x73, 0x74, 0x03, 0x1F, 0x03, 0x0F, 0x00, 0x00, 0x13, 0xA4,
	0x00, 0x00, 0x00, 0x38, 0x00, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x00, 0x5C, 0x04, 0x00, 0x00, 0x00, 0xFF, 0x98, 0x04, 0x68, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0xCB, 0x64, 0x7B, 0x7E, 0x5F, 0x0F, 0x3C, 0xF5, 0x00, 0x0B, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xD5, 0x46, 0x54, 0x75, 0x00, 0x00, 0x00, 0x00,
	0xD5, 0x46, 0x54, 0x75, 0xFF, 0xD0, 0x00, 0x00, 0x04, 0x38, 0x04, 0x01,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x07, 0x01, 0x91, 0x00, 0x0E, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x0A, 0x00, 0x00,
	0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00,
	0x01, 0x90, 0x00, 0x05, 0x00, 0x08, 0x02, 0x89, 0x02, 0xCC, 0x00, 0x00,
	0x00, 0x8F, 0x02, 0x89, 0x02, 0xCC, 0x00, 0x00, 0x01, 0xEB, 0x00, 0x32,
	0x01, 0x08, 0x00, 0x00, 0x02, 0x00, 0x05, 0x03, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x66, 0x45, 0x64, 0x00, 0x40,
	0x00, 0x41, 0x00, 0x49, 0x04, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x04, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x1C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54,
	0x00, 0x03, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x04, 0x00, 0x38,
	0x00, 0x00, 0x00, 0x0A, 0x00, 0x08, 0x00, 0x02, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x42, 0x00, 0x44, 0x00, 0x49, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x41, 0x00, 0x44, 0x00, 0x47, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xC0,
	0xFF, 0xBF, 0xFF, 0xBD, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x06, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x03, 0x00, 0x00, 0x04, 0x05, 0x06,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x44, 0x03, 0x40,
	0x04, 0xC4, 0x06, 0x66, 0x06, 0xB0, 0x07, 0x16, 0x00, 0x0A, 0xFF, 0xD0,
	0x00, 0x00, 0x04, 0x38, 0x03, 0xF2, 0x00, 0x9D, 0x00, 0xF4, 0x01, 0x06,
	0x01, 0x1D, 0x01, 0x36, 0x01, 0x48, 0x01, 0x5C, 0x01, 0x6F, 0x01, 0x81,
	0x01, 0x90, 0x00, 0x00, 0x13, 0x0E, 0x02, 0x0F, 0x01, 0x0E, 0x01, 0x22,
	0x0F, 0x01, 0x0E, 0x01, 0x07, 0x0E, 0x01, 0x14, 0x07, 0x06, 0x0F, 0x01,
	0x0E, 0x01, 0x17, 0x15, 0x16, 0x17, 0x1E, 0x02, 0x1F, 0x01, 0x16, 0x17,
	0x1E, 0x01, 0x07, 0x06, 0x0F, 0x01, 0x06, 0x07, 0x15, 0x14, 0x16, 0x17,
	0x1E, 0x01, 0x17, 0x32, 0x1F, 0x01, 0x1E, 0x01, 0x17, 0x1E, 0x01, 0x32,
	0x17, 0x16, 0x17, 0x16, 0x36, 0x37, 0x36, 0x3F, 0x01, 0x3E, 0x01, 0x37,
	0x3E, 0x01, 0x35, 0x34, 0x2E, 0x01, 0x27, 0x2E, 0x01, 0x3E, 0x03, 0x37,
	0x3E, 0x01, 0x34, 0x3E, 0x02, 0x34, 0x3F, 0x01, 0x36, 0x3F, 0x01, 0x36,
	0x34, 0x2F, 0x01, 0x2E, 0x01, 0x37, 0x3E, 0x01, 0x3F, 0x01, 0x3E, 0x01,
	0x3D, 0x01, 0x26, 0x35, 0x2F, 0x01, 0x2E, 0x01, 0x37, 0x26, 0x36, 0x33,
	0x32, 0x36, 0x3F, 0x02, 0x36, 0x2E, 0x01, 0x23, 0x27, 0x26, 0x2F, 0x01,
	0x2E, 0x01, 0x2F, 0x01, 0x2E, 0x02, 0x27, 0x2E, 0x01, 0x2F, 0x01, 0x2E,
	0x01, 0x23, 0x26, 0x27, 0x2E, 0x01, 0x2B, 0x01, 0x22, 0x23, 0x30, 0x17,
	0x16, 0x14, 0x16, 0x3F, 0x01, 0x36, 0x17, 0x32, 0x16, 0x17, 0x1E, 0x02,
	0x1F, 0x01, 0x1E, 0x01, 0x0E, 0x01, 0x07, 0x06, 0x14, 0x17, 0x16, 0x07,
	0x0E, 0x02, 0x14, 0x06, 0x27, 0x26, 0x06, 0x07, 0x06, 0x07, 0x0E, 0x01,
	0x22, 0x26, 0x27, 0x2E, 0x01, 0x06, 0x0F, 0x01, 0x06, 0x07, 0x26, 0x2F,
	0x01, 0x2E, 0x01, 0x06, 0x26, 0x27, 0x2E, 0x01, 0x27, 0x26, 0x27, 0x34,
	0x36, 0x32, 0x3F, 0x01, 0x3E, 0x01, 0x2E, 0x01, 0x36, 0x32, 0x36, 0x37,
	0x3E, 0x01, 0x17, 0x16, 0x37, 0x32, 0x3F, 0x01, 0x3E, 0x01, 0x17, 0x30,
	0x13, 0x16, 0x17, 0x14, 0x06, 0x07, 0x0E, 0x01, 0x07, 0x06, 0x2E, 0x01,
	0x36, 0x37, 0x3E, 0x01, 0x17, 0x30, 0x17, 0x32, 0x1F, 0x01, 0x07, 0x0E,
	0x01, 0x07, 0x14, 0x06, 0x27, 0x2E, 0x01, 0x27, 0x26, 0x36, 0x37, 0x3E,
	0x02, 0x16, 0x17, 0x30, 0x03, 0x1E, 0x01, 0x15, 0x14, 0x06, 0x07, 0x0E,
	0x01, 0x07, 0x0E, 0x01, 0x07, 0x06, 0x27, 0x2E, 0x01, 0x37, 0x3E, 0x01,
	0x37, 0x36, 0x32, 0x17, 0x30, 0x01, 0x06, 0x15, 0x07, 0x06, 0x1E, 0x01,
	0x32, 0x3E, 0x01, 0x3F, 0x01, 0x36, 0x27, 0x2E, 0x01, 0x07, 0x30, 0x17,
	0x0E, 0x01, 0x17, 0x1E, 0x01, 0x17, 0x32, 0x36, 0x37, 0x3E, 0x01, 0x35,
	0x2E, 0x01, 0x27, 0x22, 0x06, 0x07, 0x30, 0x17, 0x06, 0x15, 0x14, 0x1E,
	0x02, 0x17, 0x33, 0x32, 0x3E, 0x01, 0x34, 0x26, 0x2F, 0x02, 0x2A, 0x01,
	0x17, 0x36, 0x26, 0x27, 0x2E, 0x01, 0x23, 0x0E, 0x01, 0x07, 0x14, 0x16,
	0x1F, 0x01, 0x16, 0x36, 0x37, 0x30, 0x27, 0x06, 0x16, 0x17, 0x1E, 0x01,
	0x37, 0x36, 0x2F, 0x02, 0x2E, 0x01, 0x07, 0x30, 0xC0, 0x09, 0x06, 0x15,
	0x04, 0x0D, 0x08, 0x04, 0x03, 0x07, 0x0F, 0x17, 0x19, 0x14, 0x0F, 0x16,
	0x03, 0x02, 0x02, 0x06, 0x12, 0x0E, 0x01, 0x01, 0x01, 0x04, 0x07, 0x04,
	0x04, 0x11, 0x03, 0x01, 0x06, 0x03, 0x05, 0x03, 0x01, 0x0B, 0x01, 0x01,
	0x01, 0x02, 0x0A, 0x5C, 0x08, 0x01, 0x04, 0x0A, 0x17, 0x39, 0x19, 0x0E,
	0x19, 0x05, 0x03, 0x04, 0x1D, 0x0D, 0x32, 0x0D, 0x20, 0x1E, 0x10, 0x06,
	0x10, 0x05, 0x02, 0x02, 0x03, 0x01, 0x01, 0x03, 0x02, 0x02, 0x0B, 0x20,
	0x1C, 0x08, 0x02, 0x03, 0x04, 0x0B, 0x04, 0x02, 0x18, 0x03, 0x02, 0x04,
	0x02, 0x02, 0x05, 0x02, 0x02, 0x01, 0x03, 0x04, 0x04, 0x06, 0x03, 0x02,
	0x01, 0x0A, 0x06, 0x07, 0x02, 0x03, 0x01, 0x27, 0x4C, 0x52, 0x29, 0x07,
	0x33, 0x18, 0x05, 0x06, 0x15, 0x04, 0x1D, 0x05, 0x08, 0x18, 0x02, 0x43,
	0x55, 0x6B, 0x2C, 0x08, 0x0D, 0x0C, 0x14, 0x2A, 0x11, 0x17, 0x12, 0x2C,
	0x0B, 0x06, 0x06, 0x03, 0x15, 0x1D, 0x25, 0x10, 0x05, 0x0A, 0x01, 0x08,
	0x0B, 0x24, 0x07, 0x01, 0x04, 0x06, 0x05, 0x03, 0x06, 0x05, 0x07, 0x11,
	0x12, 0x0F, 0x01, 0x09, 0x08, 0x11, 0x0D, 0x1D, 0x1F, 0x12, 0x0E, 0x03,
	0x05, 0x09, 0x15, 0x0A, 0x04, 0x05, 0x05, 0x07, 0x0C, 0x05, 0x09, 0x05,
	0x0F, 0x0C, 0x09, 0x0C, 0x0A, 0x04, 0x02, 0x05, 0x03, 0x09, 0x04, 0x03,
	0x0C, 0x04, 0x01, 0x01, 0x0A, 0x12, 0x1D, 0x02, 0x09, 0x06, 0x04, 0x0C,
	0x09, 0x05, 0x02, 0x11, 0x08, 0x36, 0x04, 0x02, 0x04, 0x0A, 0x0E, 0x0C,
	0x03, 0x02, 0x03, 0x07, 0x0A, 0x0A, 0x02, 0xD6, 0x29, 0x01, 0x03, 0x05,
	0x0C, 0x1F, 0x19, 0x17, 0x2C, 0x16, 0x10, 0x18, 0x13, 0x2E, 0x12, 0xBD,
	0x01, 0x01, 0x03, 0x06, 0x06, 0x03, 0x01, 0x07, 0x0C, 0x0A, 0x11, 0x04,
	0x05, 0x07, 0x0B, 0x07, 0x0D, 0x12, 0x07, 0x03, 0x3B, 0x08, 0x06, 0x02,
	0x02, 0x04, 0x0C, 0x06, 0x09, 0x0B, 0x0A, 0x33, 0x2A, 0x0C, 0x08, 0x01,
	0x03, 0x22, 0x11, 0x0E, 0x4B, 0x0B, 0x01, 0x6D, 0x04, 0x0B, 0x0B, 0x06,
	0x16, 0x08, 0x06, 0x01, 0x02, 0x07, 0x05, 0x0C, 0x08, 0x08, 0x03, 0x34,
	0x12, 0x0A, 0x01, 0x02, 0x10, 0x04, 0x02, 0x12, 0x0C, 0x10, 0x0D, 0x01,
	0x11, 0x05, 0x03, 0x0F, 0x0F, 0x02, 0x01, 0x01, 0x03, 0x11, 0x23, 0x25,
	0x0F, 0x06, 0x01, 0x01, 0x03, 0x04, 0x5A, 0x0F, 0x01, 0x3A, 0x0B, 0x07,
	0x1D, 0x10, 0x15, 0x01, 0x04, 0x0C, 0x01, 0x10, 0x13, 0x18, 0x0B, 0x02,
	0x08, 0x6E, 0x0A, 0x01, 0x0E, 0x07, 0x0C, 0x0A, 0x0B, 0x06, 0x03, 0x06,
	0x09, 0x0A, 0x0B, 0x03, 0xF1, 0x01, 0x03, 0x05, 0x01, 0x04, 0x03, 0x03,
	0x03, 0x08, 0x0C, 0x13, 0x14, 0x0E, 0x18, 0x04, 0x04, 0x02, 0x04, 0x0A,
	0x23, 0x3F, 0x2F, 0x20, 0x0F, 0x07, 0x1C, 0x28, 0x06, 0x18, 0x4E, 0x0A,
	0x02, 0x0C, 0x5F, 0x0F, 0x05, 0x08, 0x3B, 0x03, 0x08, 0x10, 0x0B, 0x0B,
	0x03, 0x0B, 0x5A, 0x06, 0x04, 0x08, 0x14, 0x26, 0x0C, 0x07, 0x0A, 0x01,
	0x03, 0x05, 0x02, 0x01, 0x02, 0x07, 0x11, 0x09, 0x03, 0x0F, 0x07, 0x04,
	0x08, 0x08, 0x0C, 0x04, 0x09, 0x03, 0x06, 0x16, 0x0C, 0x0C, 0x1B, 0x2D,
	0x18, 0x07, 0x07, 0x07, 0x0A, 0x2D, 0x05, 0x07, 0x03, 0x35, 0x07, 0x06,
	0x0E, 0x0A, 0x37, 0x0D, 0x13, 0x0B, 0x19, 0x09, 0x16, 0x07, 0x0D, 0x12,
	0x09, 0x0F, 0x0C, 0x0F, 0x07, 0x02, 0x22, 0x11, 0x10, 0x0A, 0x03, 0x02,
	0x01, 0x02, 0x06, 0x1C, 0x0D, 0x03, 0x05, 0x0B, 0x0D, 0x01, 0x04, 0x0B,
	0x01, 0x02, 0x01, 0x01, 0x01, 0x01, 0x0A, 0x0C, 0x13, 0x1F, 0x07, 0x0A,
	0x08, 0x0D, 0x01, 0x02, 0x02, 0x02, 0x3A, 0x05, 0x13, 0x05, 0x02, 0x06,
	0x01, 0x01, 0x08, 0x0E, 0x09, 0x0E, 0x05, 0x05, 0x0B, 0x0B, 0x0C, 0x04,
	0x0A, 0x07, 0x10, 0x08, 0x0A, 0x17, 0x02, 0x02, 0x03, 0x05, 0x1D, 0x07,
	0x02, 0x03, 0x01, 0x04, 0x06, 0x06, 0x0A, 0x0B, 0x06, 0x04, 0x0C, 0x09,
	0x01, 0x0A, 0x07, 0x03, 0x01, 0x01, 0x0B, 0x22, 0x0F, 0x03, 0x01, 0x07,
	0x0C, 0x10, 0x0A, 0x02, 0x05, 0x05, 0x02, 0x09, 0x02, 0x06, 0x04, 0x07,
	0x09, 0x22, 0x07, 0x05, 0x0C, 0x15, 0x07, 0x09, 0x06, 0x01, 0x04, 0x09,
	0x10, 0x07, 0x07, 0xFE, 0xE7, 0x10, 0x20, 0x08, 0x07, 0x06, 0x0F, 0x0F,
	0x02, 0x02, 0x13, 0x21, 0x23, 0x0C, 0x08, 0x03, 0x07, 0x1A, 0x01, 0x02,
	0x11, 0x10, 0x11, 0x0F, 0x12, 0x06, 0x05, 0x04, 0x0E, 0x07, 0x0A, 0x19,
	0x0B, 0x07, 0x08, 0x05, 0x01, 0x03, 0xFE, 0xFC, 0x03, 0x0F, 0x10, 0x0B,
	0x0B, 0x04, 0x07, 0x0C, 0x03, 0x04, 0x03, 0x01, 0x03, 0x23, 0x0A, 0x0B,
	0x04, 0x07, 0x14, 0x05, 0x03, 0x02, 0x02, 0x44, 0x04, 0x02, 0x11, 0x11,
	0x05, 0x0B, 0x08, 0x05, 0x06, 0x10, 0x0A, 0x08, 0x06, 0x01, 0x04, 0x25,
	0x12, 0x0C, 0x03, 0x05, 0x10, 0x01, 0x10, 0x0C, 0x0F, 0x0F, 0x03, 0x05,
	0x10, 0x01, 0x0C, 0x10, 0x49, 0x03, 0x0C, 0x08, 0x08, 0x06, 0x01, 0x01,
	0x01, 0x05, 0x11, 0x07, 0x03, 0x05, 0x01, 0x8E, 0x0A, 0x0F, 0x1C, 0x0F,
	0x13, 0x02, 0x13, 0x04, 0x02, 0x12, 0x12, 0x17, 0x0A, 0x01, 0x08, 0x30,
	0x06, 0x0F, 0x18, 0x0D, 0x04, 0x09, 0x0A, 0x08, 0x06, 0x0C, 0x13, 0x05,
	0x07, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04, 0x14,
	0x03, 0x65, 0x00, 0x90, 0x00, 0xA7, 0x00, 0x00, 0x25, 0x3E, 0x01, 0x37,
	0x3E, 0x01, 0x37, 0x26, 0x0F, 0x01, 0x06, 0x26, 0x16, 0x26, 0x0E, 0x02,
	0x34, 0x06, 0x26, 0x36, 0x3F, 0x03, 0x36, 0x0F, 0x03, 0x06, 0x26, 0x2F,
	0x01, 0x2E, 0x01, 0x27, 0x34, 0x06, 0x26, 0x36, 0x2E, 0x02, 0x16, 0x2F,
	0x01, 0x26, 0x06, 0x16, 0x06, 0x26, 0x27, 0x2E, 0x01, 0x36, 0x26, 0x36,
	0x26, 0x27, 0x26, 0x06, 0x26, 0x07, 0x0E, 0x01, 0x07, 0x0E, 0x01, 0x27,
	0x2E, 0x01, 0x35, 0x36, 0x26, 0x27, 0x2E, 0x01, 0x27, 0x35, 0x27, 0x2E,
	0x01, 0x27, 0x26, 0x3E, 0x01, 0x27, 0x2E, 0x01, 0x27, 0x2E, 0x01, 0x07,
	0x06, 0x26, 0x27, 0x2E, 0x01, 0x06, 0x0F, 0x01, 0x0E, 0x03, 0x15, 0x14,
	0x1E, 0x01, 0x14, 0x1F, 0x01, 0x1E, 0x01, 0x17, 0x1E, 0x01, 0x17, 0x16,
	0x1F, 0x01, 0x16, 0x17, 0x1E, 0x01, 0x17, 0x1E, 0x01, 0x17, 0x1E, 0x01,
	0x37, 0x36, 0x16, 0x17, 0x1E, 0x01, 0x36, 0x16, 0x17, 0x1E, 0x01, 0x37,
	0x30, 0x01, 0x26, 0x27, 0x26, 0x36, 0x37, 0x3E, 0x01, 0x37, 0x3E, 0x01,
	0x1E, 0x03, 0x15, 0x0E, 0x01, 0x07, 0x0E, 0x01, 0x27, 0x30, 0x03, 0x06,
	0x27, 0x5D, 0x20, 0x14, 0x33, 0x03, 0x01, 0x05, 0x0E, 0x12, 0x07, 0x05,
	0x09, 0x02, 0x08, 0x0B, 0x07, 0x07, 0x07, 0x0E, 0x0F, 0x15, 0x0F, 0x2B,
	0x22, 0x15, 0x1F, 0x0B, 0x1B, 0x84, 0x27, 0x26, 0x16, 0x5A, 0x05, 0x05,
	0x0A, 0x02, 0x0E, 0x06, 0x04, 0x06, 0x0C, 0x0B, 0x04, 0x03, 0x0F, 0x01,
	0x0C, 0x08, 0x0F, 0x13, 0x03, 0x08, 0x01, 0x0A, 0x08, 0x09, 0x07, 0x09,
	0x0A, 0x05, 0x11, 0x08, 0x0C, 0x0D, 0x0A, 0x20, 0x1E, 0x01, 0x04, 0x07,
	0x19, 0x23, 0x01, 0x0F, 0x0D, 0x0B, 0x03, 0x0A, 0x19, 0x09, 0x05, 0x01,
	0x08, 0x05, 0x10, 0x2B, 0x20, 0x0D, 0x10, 0x0A, 0x06, 0x0A, 0x02, 0x02,
	0x06, 0x04, 0x0D, 0x11, 0x0A, 0x08, 0x05, 0x03, 0x25, 0x09, 0x28, 0x13,
	0x0F, 0x30, 0x07, 0x01, 0x08, 0x14, 0x29, 0x16, 0x0D, 0x18, 0x05, 0x04,
	0x07, 0x08, 0x0D, 0x0F, 0x04, 0x06, 0x0A, 0x0B, 0x07, 0x0C, 0x04, 0x11,
	0x0B, 0x4C, 0xA2, 0x52, 0xFD, 0x4A, 0x17, 0x06, 0x02, 0x03, 0x07, 0x09,
	0x10, 0x11, 0x0D, 0x0E, 0x1B, 0x0D, 0x14, 0x06, 0x01, 0x1E, 0x14, 0x0D,
	0x25, 0x0D, 0xA5, 0x06, 0x1D, 0x0F, 0x0B, 0x21, 0x04, 0x01, 0x04, 0x09,
	0x0C, 0x03, 0x08, 0x07, 0x05, 0x02, 0x0B, 0x03, 0x08, 0x03, 0x06, 0x08,
	0x08, 0x0E, 0x09, 0x16, 0x0A, 0x05, 0x07, 0x03, 0x07, 0x05, 0x09, 0x0A,
	0x07, 0x2E, 0x06, 0x03, 0x03, 0x06, 0x04, 0x0B, 0x01, 0x04, 0x02, 0x0C,
	0x09, 0x04, 0x01, 0x0D, 0x03, 0x09, 0x07, 0x0D, 0x15, 0x05, 0x0F, 0x07,
	0x12, 0x08, 0x0A, 0x06, 0x03, 0x07, 0x04, 0x08, 0x04, 0x05, 0x02, 0x02,
	0x04, 0x24, 0x25, 0x08, 0x04, 0x01, 0x04, 0x2F, 0x1D, 0x11, 0x08, 0x07,
	0x0C, 0x0A, 0x1A, 0x1A, 0x33, 0x15, 0x04, 0x0E, 0x06, 0x14, 0x11, 0x02,
	0x01, 0x01, 0x04, 0x02, 0x02, 0x01, 0x09, 0x13, 0x0E, 0x21, 0x20, 0x18,
	0x03, 0x08, 0x1E, 0x0A, 0x05, 0x09, 0x51, 0x16, 0x44, 0x1A, 0x15, 0x37,
	0x06, 0x01, 0x02, 0x04, 0x08, 0x13, 0x0B, 0x27, 0x12, 0x0E, 0x0D, 0x08,
	0x0C, 0x08, 0x03, 0x05, 0x02, 0x07, 0x05, 0x05, 0x01, 0x07, 0x05, 0x24,
	0x18, 0x0C, 0x02, 0x30, 0x08, 0x13, 0x06, 0x0A, 0x0B, 0x10, 0x0E, 0x07,
	0x06, 0x02, 0x02, 0x05, 0x0F, 0x07, 0x06, 0x11, 0x25, 0x09, 0x04, 0x01,
	0x04, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x04, 0x01, 0x00, 0x11, 0x00, 0x22, 0x00, 0x35, 0x00, 0x55, 0x00, 0x69,
	0x00, 0x7B, 0x00, 0x8E, 0x00, 0xA0, 0x00, 0xB2, 0x00, 0xC3, 0x00, 0xD3,
	0x00, 0xE3, 0x00, 0xF3, 0x01, 0x05, 0x00, 0x00, 0x25, 0x2E, 0x01, 0x34,
	0x36, 0x37, 0x36, 0x32, 0x17, 0x1E, 0x01, 0x14, 0x06, 0x07, 0x06, 0x22,
	0x27, 0x30, 0x27, 0x26, 0x27, 0x3E, 0x01, 0x37, 0x36, 0x17, 0x16, 0x06,
	0x0F, 0x02, 0x06, 0x26, 0x27, 0x30, 0x25, 0x26, 0x2F, 0x01, 0x2E, 0x01,
	0x37, 0x36, 0x17, 0x1E, 0x01, 0x17, 0x0E, 0x01, 0x23, 0x22, 0x26, 0x27,
	0x30, 0x25, 0x2E, 0x01, 0x27, 0x2E, 0x01, 0x35, 0x34, 0x36, 0x37, 0x3E,
	0x01, 0x37, 0x36, 0x32, 0x17, 0x1E, 0x01, 0x17, 0x1E, 0x01, 0x15, 0x14,
	0x06, 0x07, 0x0E, 0x01, 0x07, 0x06, 0x22, 0x27, 0x30, 0x37, 0x36, 0x37,
	0x36, 0x35, 0x34, 0x27, 0x2E, 0x01, 0x27, 0x2E, 0x01, 0x27, 0x26, 0x06,
	0x15, 0x11, 0x3F, 0x01, 0x30, 0x25, 0x2E, 0x01, 0x37, 0x36, 0x3F, 0x01,
	0x3E, 0x01, 0x17, 0x16, 0x07, 0x0E, 0x01, 0x07, 0x22, 0x27, 0x30, 0x25,
	0x2E, 0x01, 0x27, 0x26, 0x37, 0x36, 0x16, 0x17, 0x1E, 0x01, 0x17, 0x16,
	0x06, 0x07, 0x22, 0x26, 0x27, 0x30, 0x25, 0x26, 0x34, 0x37, 0x3E, 0x01,
	0x32, 0x16, 0x17, 0x16, 0x14, 0x07, 0x0E, 0x01, 0x22, 0x26, 0x27, 0x30,
	0x21, 0x26, 0x34, 0x37, 0x3E, 0x01, 0x32, 0x16, 0x17, 0x16, 0x14, 0x07,
	0x0E, 0x01, 0x22, 0x26, 0x27, 0x30, 0x25, 0x2E, 0x01, 0x27, 0x26, 0x3E,
	0x01, 0x33, 0x1E, 0x01, 0x17, 0x16, 0x07, 0x06, 0x26, 0x27, 0x30, 0x05,
	0x26, 0x37, 0x3E, 0x01, 0x37, 0x1E, 0x01, 0x07, 0x0E, 0x01, 0x07, 0x0E,
	0x01, 0x27, 0x30, 0x25, 0x2E, 0x01, 0x27, 0x3E, 0x01, 0x17, 0x1E, 0x01,
	0x17, 0x1E, 0x01, 0x07, 0x06, 0x27, 0x30, 0x21, 0x26, 0x36, 0x37, 0x3E,
	0x01, 0x37, 0x36, 0x16, 0x17, 0x0E, 0x01, 0x07, 0x06, 0x27, 0x30, 0x27,
	0x2E, 0x01, 0x34, 0x36, 0x37, 0x36, 0x32, 0x17, 0x1E, 0x01, 0x14, 0x06,
	0x07, 0x06, 0x22, 0x27, 0x30, 0x01, 0xF1, 0x04, 0x03, 0x03, 0x04, 0x07,
	0x10, 0x07, 0x04, 0x03, 0x03, 0x04, 0x07, 0x10, 0x07, 0xF6, 0x05, 0x01,
	0x03, 0x2B, 0x09, 0x0D, 0x0D, 0x0A, 0x07, 0x14, 0x12, 0x0A, 0x06, 0x12,
	0x06, 0x01, 0xEA, 0x03, 0x08, 0x11, 0x13, 0x06, 0x0A, 0x0D, 0x0D, 0x09,
	0x2B, 0x03, 0x01, 0x0A, 0x0B, 0x06, 0x07, 0x03, 0xFE, 0xDD, 0x5F, 0x90,
	0x1F, 0x08, 0x07, 0x1C, 0x1E, 0x28, 0x77, 0x47, 0x18, 0x46, 0x19, 0x60,
	0x91, 0x1F, 0x07, 0x08, 0x1C, 0x1E, 0x28, 0x77, 0x47, 0x17, 0x4A, 0x18,
	0x76, 0x60, 0x44, 0x54, 0x54, 0x1A, 0x3B, 0x23, 0x11, 0x2E, 0x0B, 0x03,
	0x02, 0x12, 0x11, 0xFE, 0x12, 0x07, 0x01, 0x05, 0x03, 0x0D, 0x1F, 0x22,
	0x1A, 0x06, 0x0B, 0x0C, 0x0A, 0x4C, 0x0B, 0x05, 0x07, 0x03, 0x2F, 0x12,
	0x1B, 0x03, 0x0C, 0x0B, 0x06, 0x1A, 0x22, 0x12, 0x1A, 0x03, 0x07, 0x0A,
	0x0C, 0x03, 0x1C, 0x12, 0xFC, 0x8E, 0x07, 0x07, 0x03, 0x13, 0x4E, 0x13,
	0x03, 0x07, 0x07, 0x03, 0x13, 0x4E, 0x13, 0x03, 0x03, 0x78, 0x07, 0x07,
	0x03, 0x13, 0x4E, 0x13, 0x03, 0x07, 0x07, 0x03, 0x13, 0x4E, 0x13, 0x03,
	0xFC, 0xF6, 0x11, 0x1A, 0x03, 0x05, 0x01, 0x0E, 0x05, 0x0B, 0x4C, 0x0A,
	0x0C, 0x0B, 0x07, 0x1A, 0x22, 0x02, 0xD3, 0x0B, 0x0C, 0x0A, 0x4C, 0x0B,
	0x0C, 0x0A, 0x07, 0x03, 0x1A, 0x12, 0x22, 0x1A, 0x06, 0xFD, 0xE4, 0x09,
	0x2B, 0x03, 0x01, 0x18, 0x09, 0x03, 0x11, 0x0A, 0x14, 0x07, 0x0A, 0x0D,
	0x0D, 0x01, 0x8E, 0x0A, 0x07, 0x14, 0x0A, 0x11, 0x03, 0x09, 0x18, 0x01,
	0x03, 0x2B, 0x09, 0x0D, 0x0D, 0xC9, 0x04, 0x03, 0x03, 0x04, 0x07, 0x10,
	0x07, 0x04, 0x03, 0x03, 0x04, 0x07, 0x10, 0x07, 0x07, 0x03, 0x13, 0x4F,
	0x13, 0x03, 0x06, 0x06, 0x03, 0x13, 0x4F, 0x13, 0x03, 0x06, 0x06, 0x43,
	0x07, 0x06, 0x0A, 0x4C, 0x0B, 0x0B, 0x0B, 0x06, 0x1A, 0x22, 0x1F, 0x0F,
	0x06, 0x02, 0x06, 0x02, 0x04, 0x0D, 0x1D, 0x1F, 0x19, 0x06, 0x0B, 0x0B,
	0x0B, 0x4C, 0x0A, 0x06, 0x0E, 0x04, 0x05, 0x5E, 0x12, 0x7F, 0x5D, 0x19,
	0x32, 0x1E, 0x36, 0x5E, 0x2D, 0x3B, 0x4E, 0x0C, 0x04, 0x04, 0x12, 0x7F,
	0x5D, 0x18, 0x33, 0x1E, 0x36, 0x5E, 0x2D, 0x3B, 0x4E, 0x0C, 0x04, 0x04,
	0x2B, 0x12, 0x47, 0x58, 0x79, 0x7C, 0x58, 0x1B, 0x26, 0x0C, 0x06, 0x0A,
	0x01, 0x08, 0x64, 0xD4, 0xFE, 0xD0, 0x01, 0x03, 0x26, 0x06, 0x13, 0x05,
	0x02, 0x08, 0x13, 0x14, 0x06, 0x09, 0x0E, 0x0C, 0x09, 0x2C, 0x02, 0x05,
	0x13, 0x0A, 0x12, 0x03, 0x0C, 0x0E, 0x09, 0x06, 0x14, 0x0B, 0x10, 0x03,
	0x0A, 0x17, 0x01, 0x0E, 0x0A, 0xE4, 0x06, 0x11, 0x06, 0x05, 0x02, 0x02,
	0x05, 0x06, 0x11, 0x06, 0x05, 0x02, 0x02, 0x05, 0x06, 0x11, 0x06, 0x05,
	0x02, 0x02, 0x05, 0x06, 0x11, 0x06, 0x05, 0x02, 0x02, 0x05, 0xD9, 0x0B,
	0x10, 0x02, 0x05, 0x13, 0x0B, 0x02, 0x2C, 0x09, 0x0C, 0x0E, 0x0A, 0x07,
	0x14, 0x11, 0x0E, 0x0C, 0x0A, 0x2B, 0x02, 0x01, 0x17, 0x0A, 0x03, 0x10,
	0x0B, 0x14, 0x06, 0x09, 0x8F, 0x0B, 0x4C, 0x0A, 0x0C, 0x0A, 0x07, 0x02,
	0x1B, 0x11, 0x22, 0x1A, 0x06, 0x0B, 0x0B, 0x06, 0x1A, 0x22, 0x11, 0x1B,
	0x02, 0x07, 0x0A, 0x0C, 0x0A, 0x4C, 0x0B, 0x0B, 0x0B, 0x36, 0x03, 0x13,
	0x4F, 0x13, 0x03, 0x06, 0x06, 0x03, 0x13, 0x4F, 0x13, 0x03, 0x06, 0x06,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x03, 0xD6, 0x00, 0x0D,
	0x00, 0x18, 0x00, 0x23, 0x00, 0x87, 0x00, 0xD3, 0x01, 0x1E, 0x00, 0x00,
	0x01, 0x2E, 0x01, 0x27, 0x0E, 0x01, 0x07, 0x1E, 0x01, 0x17, 0x3E, 0x01,
	0x37, 0x30, 0x01, 0x34, 0x26, 0x22, 0x06, 0x14, 0x16, 0x32, 0x36, 0x35,
	0x30, 0x11, 0x34, 0x26, 0x22, 0x06, 0x14, 0x16, 0x32, 0x36, 0x35, 0x30,
	0x07, 0x14, 0x1D, 0x01, 0x14, 0x06, 0x0F, 0x01, 0x06, 0x07, 0x16, 0x17,
	0x1E, 0x01, 0x07, 0x0E, 0x01, 0x07, 0x22, 0x2F, 0x01, 0x06, 0x07, 0x0E,
	0x01, 0x07, 0x06, 0x07, 0x23, 0x22, 0x26, 0x2F, 0x01, 0x26, 0x27, 0x07,
	0x06, 0x22, 0x27, 0x2E, 0x01, 0x27, 0x34, 0x3F, 0x01, 0x26, 0x2F, 0x01,
	0x2E, 0x01, 0x3D, 0x01, 0x34, 0x36, 0x3F, 0x01, 0x36, 0x37, 0x26, 0x27,
	0x2E, 0x01, 0x37, 0x3E, 0x01, 0x37, 0x32, 0x1F, 0x01, 0x36, 0x37, 0x3E,
	0x01, 0x37, 0x36, 0x37, 0x33, 0x1E, 0x01, 0x1F, 0x01, 0x16, 0x17, 0x37,
	0x36, 0x32, 0x17, 0x1E, 0x01, 0x17, 0x14, 0x07, 0x06, 0x07, 0x16, 0x1F,
	0x01, 0x16, 0x17, 0x30, 0x01, 0x14, 0x1D, 0x01, 0x0E, 0x01, 0x07, 0x06,
	0x07, 0x1E, 0x01, 0x17, 0x14, 0x0F, 0x01, 0x06, 0x07, 0x2E, 0x01, 0x27,
	0x06, 0x22, 0x27, 0x0E, 0x01, 0x07, 0x26, 0x2F, 0x01, 0x26, 0x35, 0x3E,
	0x01, 0x37, 0x26, 0x27, 0x2E, 0x01, 0x27, 0x35, 0x3E, 0x01, 0x37, 0x36,
	0x37, 0x2E, 0x01, 0x27, 0x34, 0x3F, 0x01, 0x36, 0x37, 0x1E, 0x01, 0x17,
	0x36, 0x32, 0x17, 0x36, 0x3F, 0x01, 0x16, 0x1F, 0x01, 0x16, 0x15, 0x0E,
	0x01, 0x07, 0x16, 0x17, 0x1E, 0x01, 0x17, 0x30, 0x11, 0x14, 0x1D, 0x01,
	0x0E, 0x01, 0x07, 0x06, 0x07, 0x1E, 0x01, 0x17, 0x14, 0x0F, 0x01, 0x06,
	0x07, 0x2E, 0x01, 0x27, 0x06, 0x22, 0x27, 0x0E, 0x01, 0x07, 0x26, 0x2F,
	0x01, 0x26, 0x35, 0x3E, 0x01, 0x37, 0x26, 0x27, 0x2E, 0x01, 0x27, 0x35,
	0x3E, 0x01, 0x37, 0x36, 0x37, 0x2E, 0x01, 0x27, 0x34, 0x3F, 0x01, 0x36,
	0x37, 0x1E, 0x01, 0x17, 0x36, 0x32, 0x17, 0x36, 0x3F, 0x01, 0x16, 0x1F,
	0x01, 0x16, 0x15, 0x0E, 0x01, 0x07, 0x16, 0x17, 0x1E, 0x01, 0x17, 0x01,
	0xDE, 0x02, 0x4D, 0x3A, 0x3A, 0x4D, 0x01, 0x01, 0x4D, 0x3A, 0x3A, 0x4D,
	0x02, 0x01, 0x99, 0x27, 0x3A, 0x26, 0x26, 0x3A, 0x27, 0x27, 0x3A, 0x26,
	0x26, 0x3A, 0x27, 0xCC, 0x07, 0x06, 0x52, 0x07, 0x0A, 0x16, 0x1A, 0x03,
	0x01, 0x04, 0x0B, 0x3D, 0x0E, 0x07, 0x04, 0x3E, 0x13, 0x16, 0x02, 0x05,
	0x05, 0x04, 0x0C, 0x63, 0x06, 0x09, 0x01, 0x0C, 0x15, 0x14, 0x3E, 0x05,
	0x0D, 0x04, 0x0E, 0x3C, 0x03, 0x04, 0x2F, 0x0C, 0x07, 0x51, 0x06, 0x07,
	0x07, 0x05, 0x53, 0x06, 0x0B, 0x16, 0x1A, 0x03, 0x01, 0x04, 0x0B, 0x3C,
	0x0F, 0x06, 0x05, 0x3D, 0x14, 0x15, 0x02, 0x06, 0x05, 0x04, 0x0C, 0x63,
	0x06, 0x09, 0x01, 0x0C, 0x15, 0x13, 0x3F, 0x05, 0x0C, 0x05, 0x0E, 0x3B,
	0x04, 0x04, 0x18, 0x16, 0x0A, 0x08, 0x51, 0x0C, 0x01, 0x01, 0x55, 0x04,
	0x40, 0x0B, 0x07, 0x09, 0x04, 0x15, 0x02, 0x02, 0x23, 0x1A, 0x06, 0x07,
	0x27, 0x06, 0x08, 0x10, 0x08, 0x06, 0x27, 0x07, 0x05, 0x1B, 0x22, 0x02,
	0x01, 0x15, 0x05, 0x0A, 0x06, 0x0C, 0x40, 0x04, 0x04, 0x40, 0x0C, 0x06,
	0x0A, 0x05, 0x15, 0x01, 0x02, 0x22, 0x1B, 0x05, 0x07, 0x27, 0x06, 0x08,
	0x10, 0x08, 0x16, 0x1B, 0x03, 0x06, 0x1A, 0x23, 0x02, 0x02, 0x15, 0x04,
	0x09, 0x07, 0x0C, 0x3F, 0x04, 0x04, 0x40, 0x0B, 0x07, 0x09, 0x04, 0x15,
	0x02, 0x02, 0x23, 0x1A, 0x06, 0x07, 0x27, 0x06, 0x08, 0x10, 0x08, 0x06,
	0x27, 0x07, 0x05, 0x1B, 0x22, 0x02, 0x01, 0x15, 0x05, 0x0A, 0x06, 0x0C,
	0x40, 0x04, 0x04, 0x40, 0x0C, 0x06, 0x0A, 0x05, 0x15, 0x01, 0x02, 0x22,
	0x1B, 0x05, 0x07, 0x27, 0x06, 0x08, 0x10, 0x08, 0x16, 0x1B, 0x03, 0x06,
	0x1A, 0x23, 0x02, 0x02, 0x15, 0x04, 0x09, 0x07, 0x0C, 0x3F, 0x04, 0x02,
	0x00, 0x3A, 0x4D, 0x02, 0x02, 0x4D, 0x3A, 0x3A, 0x4D, 0x01, 0x01, 0x4D,
	0x3A, 0xFE, 0xEF, 0x1D, 0x27, 0x27, 0x3A, 0x26, 0x26, 0x1D, 0x02, 0x22,
	0x1D, 0x27, 0x27, 0x3A, 0x26, 0x27, 0x1C, 0xE0, 0x06, 0x2C, 0x31, 0x05,
	0x0A, 0x01, 0x0D, 0x14, 0x14, 0x20, 0x1E, 0x04, 0x0C, 0x04, 0x0F, 0x3D,
	0x04, 0x04, 0x30, 0x0A, 0x07, 0x14, 0x2B, 0x13, 0x0C, 0x01, 0x08, 0x05,
	0x52, 0x07, 0x09, 0x2F, 0x04, 0x04, 0x0D, 0x3A, 0x0F, 0x05, 0x05, 0x3D,
	0x15, 0x16, 0x0D, 0x01, 0x09, 0x06, 0x62, 0x06, 0x09, 0x01, 0x0D, 0x15,
	0x14, 0x1F, 0x1E, 0x05, 0x0B, 0x05, 0x0F, 0x3D, 0x03, 0x03, 0x30, 0x0A,
	0x07, 0x14, 0x2A, 0x14, 0x0C, 0x01, 0x01, 0x07, 0x06, 0x51, 0x07, 0x0A,
	0x30, 0x03, 0x04, 0x0C, 0x3B, 0x0E, 0x06, 0x04, 0x1F, 0x1E, 0x16, 0x16,
	0x0C, 0x04, 0x0C, 0xFE, 0xE4, 0x05, 0x21, 0x25, 0x06, 0x0A, 0x01, 0x0F,
	0x0C, 0x0B, 0x35, 0x0A, 0x02, 0x02, 0x14, 0x0F, 0x02, 0x03, 0x31, 0x09,
	0x01, 0x01, 0x09, 0x31, 0x03, 0x02, 0x0F, 0x14, 0x02, 0x02, 0x0A, 0x35,
	0x0B, 0x0C, 0x0F, 0x01, 0x0A, 0x06, 0x4B, 0x06, 0x09, 0x01, 0x0F, 0x0D,
	0x0B, 0x35, 0x09, 0x02, 0x02, 0x14, 0x0F, 0x02, 0x03, 0x30, 0x09, 0x01,
	0x01, 0x20, 0x1B, 0x01, 0x02, 0x0F, 0x14, 0x02, 0x02, 0x09, 0x35, 0x0B,
	0x0D, 0x0F, 0x01, 0x09, 0x06, 0x02, 0x22, 0x05, 0x21, 0x25, 0x06, 0x09,
	0x01, 0x10, 0x0C, 0x0B, 0x35, 0x0A, 0x02, 0x01, 0x15, 0x0F, 0x02, 0x03,
	0x31, 0x09, 0x01, 0x01, 0x09, 0x31, 0x03, 0x02, 0x0F, 0x15, 0x01, 0x02,
	0x0A, 0x35, 0x0B, 0x0C, 0x10, 0x01, 0x09, 0x06, 0x4B, 0x06, 0x09, 0x01,
	0x0F, 0x0D, 0x0B, 0x35, 0x0A, 0x01, 0x02, 0x14, 0x10, 0x02, 0x03, 0x31,
	0x09, 0x01, 0x01, 0x20, 0x1C, 0x01, 0x02, 0x10, 0x14, 0x02, 0x01, 0x0A,
	0x35, 0x0B, 0x0D, 0x0F, 0x01, 0x09, 0x06, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x04, 0x00, 0x04, 0x00, 0x00, 0x16, 0x00, 0x2A, 0x00, 0x00,
	0x01, 0x1E, 0x01, 0x17, 0x0E, 0x01, 0x07, 0x06, 0x02, 0x07, 0x0E, 0x01,
	0x23, 0x2E, 0x01, 0x27, 0x3E, 0x01, 0x37, 0x01, 0x3E, 0x01, 0x33, 0x01,
	0x1E, 0x01, 0x1F, 0x01, 0x14, 0x06, 0x07, 0x2E, 0x01, 0x37, 0x17, 0x16,
	0x17, 0x32, 0x37, 0x3E, 0x01, 0x37, 0x30, 0x03, 0x9C, 0x28, 0x3A, 0x02,
	0x01, 0x0E, 0x0B, 0x27, 0xA7, 0x3C, 0x1A, 0x3E, 0x24, 0x4B, 0x63, 0x02,
	0x01, 0x1B, 0x19, 0x01, 0x6D, 0x0F, 0x26, 0x15, 0xFD, 0xF8, 0x17, 0x4D,
	0x2F, 0x01, 0x95, 0x7C, 0x91, 0x86, 0x01, 0x3A, 0x28, 0x15, 0x16, 0x09,
	0x24, 0x7A, 0x5F, 0x04, 0x00, 0x01, 0x33, 0x29, 0x17, 0x2B, 0x14, 0x4D,
	0xFE, 0xDD, 0x3E, 0x19, 0x1B, 0x02, 0x66, 0x4A, 0x23, 0x3F, 0x17, 0x01,
	0x4B, 0x0E, 0x11, 0xFD, 0xB1, 0x2C, 0x3D, 0x0D, 0x28, 0x7C, 0x95, 0x02,
	0x04, 0xBE, 0x88, 0x2A, 0x1C, 0x03, 0x15, 0x5C, 0x3E, 0x01, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x04, 0x01, 0x00, 0x0F,
	0x00, 0x1F, 0x00, 0x2F, 0x00, 0x3D, 0x00, 0x4D, 0x00, 0x00, 0x13, 0x14,
	0x1D, 0x01, 0x33, 0x35, 0x3E, 0x01, 0x37, 0x33, 0x35, 0x23, 0x0E, 0x01,
	0x15, 0x30, 0x25, 0x22, 0x2B, 0x01, 0x15, 0x33, 0x1E, 0x01, 0x17, 0x15,
	0x33, 0x35, 0x2E, 0x01, 0x27, 0x30, 0x01, 0x34, 0x3D, 0x01, 0x23, 0x15,
	0x14, 0x16, 0x3B, 0x01, 0x35, 0x23, 0x2E, 0x01, 0x27, 0x30, 0x21, 0x0E,
	0x01, 0x07, 0x23, 0x15, 0x33, 0x32, 0x36, 0x37, 0x35, 0x23, 0x15, 0x30,
	0x01, 0x22, 0x2B, 0x01, 0x15, 0x23, 0x15, 0x33, 0x15, 0x33, 0x35, 0x33,
	0x35, 0x23, 0x35, 0x30, 0x01, 0x35, 0x01, 0x0F, 0x0B, 0x87, 0x87, 0x22,
	0x2E, 0x03, 0xAF, 0x09, 0x3B, 0x43, 0x87, 0x0B, 0x0F, 0x01, 0x36, 0x01,
	0x2E, 0x22, 0xFC, 0x86, 0x35, 0x2E, 0x22, 0x87, 0x87, 0x0B, 0x0F, 0x01,
	0x03, 0x95, 0x01, 0x0F, 0x0B, 0x87, 0x87, 0x22, 0x2E, 0x01, 0x36, 0xFE,
	0x50, 0x03, 0x18, 0x1A, 0x87, 0x87, 0x35, 0x87, 0x87, 0x03, 0xB0, 0x09,
	0x3B, 0x43, 0x87, 0x0B, 0x0F, 0x01, 0x36, 0x01, 0x2E, 0x22, 0x51, 0x36,
	0x01, 0x0F, 0x0B, 0x87, 0x87, 0x22, 0x2E, 0x01, 0xFC, 0x50, 0x09, 0x3B,
	0x43, 0x87, 0x22, 0x2E, 0x35, 0x01, 0x0F, 0x0B, 0x0B, 0x0F, 0x01, 0x35,
	0x2E, 0x22, 0x87, 0x87, 0x02, 0x51, 0x87, 0x35, 0x87, 0x87, 0x35, 0x87,
	0x00, 0x00, 0x00, 0x12, 0x00, 0xDE, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x08, 0x00, 0x15, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x07, 0x00, 0x1D, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x08, 0x00, 0x24, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x08, 0x00, 0x2C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x0B, 0x00, 0x34, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x06, 0x00, 0x08, 0x00, 0x3F, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0A, 0x00, 0x2B, 0x00, 0x47, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0B, 0x00, 0x13, 0x00, 0x72, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x00, 0x00, 0x2A, 0x00, 0x85, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x01, 0x00, 0x10, 0x00, 0xAF, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x02, 0x00, 0x0E, 0x00, 0xBF, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x03, 0x00, 0x10, 0x00, 0xCD, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x04, 0x00, 0x10, 0x00, 0xDD, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x05, 0x00, 0x16, 0x00, 0xED, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x06, 0x00, 0x10, 0x01, 0x03, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x0A, 0x00, 0x56, 0x01, 0x13, 0x00, 0x03, 0x00, 0x01, 0x04, 0x09,
	0x00, 0x0B, 0x00, 0x26, 0x01, 0x69, 0x47, 0x65, 0x6E, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x47, 0x6C, 0x79, 0x70, 0x68,
	0x74, 0x65, 0x72, 0x62, 0x61, 0x64, 0x63, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x67, 0x75, 0x6C, 0x61, 0x72, 0x62, 0x61, 0x64, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x62, 0x61, 0x64, 0x63, 0x61, 0x63, 0x68, 0x65, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6F, 0x6E, 0x20, 0x31, 0x2E, 0x30, 0x62, 0x61, 0x64,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x47, 0x65, 0x6E, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x73, 0x76, 0x67, 0x32, 0x74, 0x74,
	0x66, 0x20, 0x66, 0x72, 0x6F, 0x6D, 0x20, 0x46, 0x6F, 0x6E, 0x74, 0x65,
	0x6C, 0x6C, 0x6F, 0x20, 0x70, 0x72, 0x6F, 0x6A, 0x65, 0x63, 0x74, 0x2E,
	0x68, 0x74, 0x74, 0x70, 0x3A, 0x2F, 0x2F, 0x66, 0x6F, 0x6E, 0x74, 0x65,
	0x6C, 0x6C, 0x6F, 0x2E, 0x63, 0x6F, 0x6D, 0x00, 0x47, 0x00, 0x65, 0x00,
	0x6E, 0x00, 0x65, 0x00, 0x72, 0x00, 0x61, 0x00, 0x74, 0x00, 0x65, 0x00,
	0x64, 0x00, 0x20, 0x00, 0x62, 0x00, 0x79, 0x00, 0x20, 0x00, 0x47, 0x00,
	0x6C, 0x00, 0x79, 0x00, 0x70, 0x00, 0x68, 0x00, 0x74, 0x00, 0x65, 0x00,
	0x72, 0x00, 0x62, 0x00, 0x61, 0x00, 0x64, 0x00, 0x63, 0x00, 0x61, 0x00,
	0x63, 0x00, 0x68, 0x00, 0x65, 0x00, 0x52, 0x00, 0x65, 0x00, 0x67, 0x00,
	0x75, 0x00, 0x6C, 0x00, 0x61, 0x00, 0x72, 0x00, 0x62, 0x00, 0x61, 0x00,
	0x64, 0x00, 0x63, 0x00, 0x61, 0x00, 0x63, 0x00, 0x68, 0x00, 0x65, 0x00,
	0x62, 0x00, 0x61, 0x00, 0x64, 0x00, 0x63, 0x00, 0x61, 0x00, 0x63, 0x00,
	0x68, 0x00, 0x65, 0x00, 0x56, 0x00, 0x65, 0x00, 0x72, 0x00, 0x73, 0x00,
	0x69, 0x00, 0x6F, 0x00, 0x6E, 0x00, 0x20, 0x00, 0x31, 0x00, 0x2E, 0x00,
	0x30, 0x00, 0x62, 0x00, 0x61, 0x00, 0x64, 0x00, 0x63, 0x00, 0x61, 0x00,
	0x63, 0x00, 0x68, 0x00, 0x65, 0x00, 0x47, 0x00, 0x65, 0x00, 0x6E, 0x00,
	0x65, 0x00, 0x72, 0x00, 0x61, 0x00, 0x74, 0x00, 0x65, 0x00, 0x64, 0x00,
	0x20, 0x00, 0x62, 0x00, 0x79, 0x00, 0x20, 0x00, 0x73, 0x00, 0x76, 0x00,
	0x67, 0x00, 0x32, 0x00, 0x74, 0x00, 0x74, 0x00, 0x66, 0x00, 0x20, 0x00,
	0x66, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x20, 0x00, 0x46, 0x00,
	0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00,
	0x6F, 0x00, 0x20, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6F, 0x00, 0x6A, 0x00,
	0x65, 0x00, 0x63, 0x00, 0x74, 0x00, 0x2E, 0x00, 0x68, 0x00, 0x74, 0x00,
	0x74, 0x00, 0x70, 0x00, 0x3A, 0x00, 0x2F, 0x00, 0x2F, 0x00, 0x66, 0x00,
	0x6F, 0x00, 0x6E, 0x00, 0x74, 0x00, 0x65, 0x00, 0x6C, 0x00, 0x6C, 0x00,
	0x6F, 0x00, 0x2E, 0x00, 0x63, 0x00, 0x6F, 0x00, 0x6D, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x01, 0x02, 0x01, 0x03, 0x01, 0x04, 0x01, 0x05, 0x01, 0x06, 0x01, 0x07,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

class xmsykgr {
public:
	int anzldkvfvtitb;
	xmsykgr();
	void vpyzvdezkv(bool nzkthpfjezpwcd);
	string mqehgnhftsrnhpfntyyalp(int zunzvd, bool kqtwlckqykv, double bamzx);
	string pucuzlzjeylepwjipt(bool ialla, int ytfqnh, int mpzhoqblon, string drlhqztrmv);
	bool epozoiwhzpeffjvbz(double kdvfdxhuforwfh, int fiepbksbk, double tizlstldhsrhvhm, double spdmyonigunvid, bool epcoxt, bool agkhaxwcce, bool sykozugcix, int wcyzqniwgiocue, double tzjelmftdu, string jguohr);
	void ttwndxkrrsymtholny(int xgntmn, int pxlmwnnayqqecub, double ppojfetkpbhkn, bool bfqcywp, int xuolxaw, bool jmlerul, string nxcbfozoelq, int ssnmo, bool bexbpgfhww, int lkckuw);
	bool lhqwhwwoynsl();
	bool nbucitmbfy(string cdyubfcur, string zxabb, int dsuyirpte, string mqaoqj, int gfpyjbgd, double aiwypzc, bool edtmhvt);
	int bprlfkwslsz(int prycuqyvtanzgl, string cpxpmlejhc, bool vqthvlbxuzxrohb, double lxgktrlvbix, double cgnulwwf);

protected:
	bool zqoqdi;

	void kpmicgxgpbiitwrorkszr(double lpjkne, double rfivbumbmbuzh, double kharugqkjkjlv);
	bool rzkwgzpmapv(string evrleamfi, double tnzmryret, bool rnpvxunug);
	void jalfxpaognofwizlc(double xfvcgoci, string qufjyadrvfaubo);
	string dtdgrrtabmnxpwwawxbeoyrk(double hncfxbcwvpuz);
	string adhvhajcqhihwrzd(double hzpxkzbbevndx, int txbttkuksh, int xqodpecuxals, double plfbtyfnk, string sezqqiob, string qbcjoxltzxkxg);

private:
	string tolbi;
	string cshfbvvdzz;

	void rdemikbwfbvxfuj(int toxdyq);
	void zrfgeynkjnxisontaorwt(int oxtsdfaprdnbt, int twlccyefsuczuwi, string runoenqh, double jtwcmyupyme, int bwggwhiplvhlgkd, int jazacsdmpuyrfn, string zydoeregbgeni, int opaicoxtemew, int xqubqffc);

};


void xmsykgr::rdemikbwfbvxfuj(int toxdyq) {
	string ahhohznvynmv = "yzwnyirnlqdviufsxxmqogszwkysmkfndkrpvqqgjqvqschjkutal";
	bool ecdfkpcguuenty = true;
	double jtdlfttwn = 10938;
	if (string("yzwnyirnlqdviufsxxmqogszwkysmkfndkrpvqqgjqvqschjkutal") == string("yzwnyirnlqdviufsxxmqogszwkysmkfndkrpvqqgjqvqschjkutal")) {
		int xroazrxw;
		for (xroazrxw = 22; xroazrxw > 0; xroazrxw--) {
			continue;
		}
	}
	if (10938 == 10938) {
		int wsx;
		for (wsx = 51; wsx > 0; wsx--) {
			continue;
		}
	}
	if (string("yzwnyirnlqdviufsxxmqogszwkysmkfndkrpvqqgjqvqschjkutal") != string("yzwnyirnlqdviufsxxmqogszwkysmkfndkrpvqqgjqvqschjkutal")) {
		int jumchcgb;
		for (jumchcgb = 2; jumchcgb > 0; jumchcgb--) {
			continue;
		}
	}
	if (true != true) {
		int hnm;
		for (hnm = 94; hnm > 0; hnm--) {
			continue;
		}
	}

}

void xmsykgr::zrfgeynkjnxisontaorwt(int oxtsdfaprdnbt, int twlccyefsuczuwi, string runoenqh, double jtwcmyupyme, int bwggwhiplvhlgkd, int jazacsdmpuyrfn, string zydoeregbgeni, int opaicoxtemew, int xqubqffc) {
	bool yfnczh = false;
	bool dkgdcocgluev = true;
	double qhyqlzanhyxpfab = 5994;
	bool uoqeisgvehb = true;
	double mnupeehmbsyb = 27203;
	bool sflpkaodqnsytnd = true;
	int tefyvicjbso = 1467;
	string cfwzx = "gbcfdtpuaivwaqbxbagdvtsdpkdedrdrydtwdexminlhlezwprrcvqddfaukegjwfvkiubzvekv";
	int ogyjmflyqkdlzk = 2732;
	if (5994 != 5994) {
		int cm;
		for (cm = 45; cm > 0; cm--) {
			continue;
		}
	}
	if (5994 != 5994) {
		int hf;
		for (hf = 52; hf > 0; hf--) {
			continue;
		}
	}
	if (27203 != 27203) {
		int pel;
		for (pel = 65; pel > 0; pel--) {
			continue;
		}
	}

}

void xmsykgr::kpmicgxgpbiitwrorkszr(double lpjkne, double rfivbumbmbuzh, double kharugqkjkjlv) {
	bool lsbqglhjahzaxiw = true;
	string gcuvgalzdd = "upxlmtohrhacogufzhtwlywbzjxzchjxddamztzgxljegemmaukragyvsigyelutywmtpkgqavkaakpvuvmbdfo";
	string scowjlenohktnbg = "nfwuatynkovtimfneapumvlqmdnydxrqgicvborbzeomutuvisrepxkbkjedfcywitnsdvtl";
	int gwcrroz = 6970;
	bool talrplmpxhaef = false;
	double jmqtejztldcdabv = 17606;
	string outtbixtdpnguh = "sw";
	double qomnqpfgfpzi = 13196;
	if (13196 != 13196) {
		int nzdir;
		for (nzdir = 24; nzdir > 0; nzdir--) {
			continue;
		}
	}
	if (false == false) {
		int unzzaohrma;
		for (unzzaohrma = 77; unzzaohrma > 0; unzzaohrma--) {
			continue;
		}
	}
	if (string("nfwuatynkovtimfneapumvlqmdnydxrqgicvborbzeomutuvisrepxkbkjedfcywitnsdvtl") == string("nfwuatynkovtimfneapumvlqmdnydxrqgicvborbzeomutuvisrepxkbkjedfcywitnsdvtl")) {
		int dnhod;
		for (dnhod = 87; dnhod > 0; dnhod--) {
			continue;
		}
	}

}

bool xmsykgr::rzkwgzpmapv(string evrleamfi, double tnzmryret, bool rnpvxunug) {
	int wahxsdxnrxszzk = 2116;
	bool vxjxmkhgiljgb = true;
	bool ymbmapkt = true;
	string yhphkdpemy = "ckapipxbqqdfwugvfqdilklfrikexzhvohevtzuobgfzoujszuyfnmzjmzvhqsosqzbibwzmjijqgdl";
	double chgwafisbe = 5643;
	double frfdirrsh = 2132;
	return true;
}

void xmsykgr::jalfxpaognofwizlc(double xfvcgoci, string qufjyadrvfaubo) {
	int rpxvtcxj = 500;
	int cgpsuybbcbth = 517;
	int saxqtzsgpgz = 2336;
	int lraniwakmw = 1010;
	bool egqqea = false;
	double ylwzmuhqgegzh = 9859;
	string aweisbjtimwm = "wsmuicyvfzlexemvaibdisnyzyuvroxgmrnwbnxkviyuxigxtcusymlworlkeyvmat";
	if (false != false) {
		int pwkvpew;
		for (pwkvpew = 47; pwkvpew > 0; pwkvpew--) {
			continue;
		}
	}
	if (string("wsmuicyvfzlexemvaibdisnyzyuvroxgmrnwbnxkviyuxigxtcusymlworlkeyvmat") == string("wsmuicyvfzlexemvaibdisnyzyuvroxgmrnwbnxkviyuxigxtcusymlworlkeyvmat")) {
		int tn;
		for (tn = 91; tn > 0; tn--) {
			continue;
		}
	}
	if (false == false) {
		int ptq;
		for (ptq = 17; ptq > 0; ptq--) {
			continue;
		}
	}
	if (string("wsmuicyvfzlexemvaibdisnyzyuvroxgmrnwbnxkviyuxigxtcusymlworlkeyvmat") != string("wsmuicyvfzlexemvaibdisnyzyuvroxgmrnwbnxkviyuxigxtcusymlworlkeyvmat")) {
		int zqlvhyg;
		for (zqlvhyg = 51; zqlvhyg > 0; zqlvhyg--) {
			continue;
		}
	}

}

string xmsykgr::dtdgrrtabmnxpwwawxbeoyrk(double hncfxbcwvpuz) {
	int tagzlyebz = 244;
	double dzguctsw = 43775;
	int itvcgzpjprwet = 4050;
	double azenvecetjalfj = 46519;
	if (244 == 244) {
		int izpxdeq;
		for (izpxdeq = 12; izpxdeq > 0; izpxdeq--) {
			continue;
		}
	}
	if (46519 != 46519) {
		int hqpzxwucc;
		for (hqpzxwucc = 33; hqpzxwucc > 0; hqpzxwucc--) {
			continue;
		}
	}
	if (244 == 244) {
		int vked;
		for (vked = 36; vked > 0; vked--) {
			continue;
		}
	}
	return string("qvbtkjfh");
}

string xmsykgr::adhvhajcqhihwrzd(double hzpxkzbbevndx, int txbttkuksh, int xqodpecuxals, double plfbtyfnk, string sezqqiob, string qbcjoxltzxkxg) {
	double rcomxv = 6730;
	double cfguv = 14522;
	double chxavkjj = 8800;
	int azlkjv = 1338;
	if (6730 != 6730) {
		int gzvfbwzwn;
		for (gzvfbwzwn = 28; gzvfbwzwn > 0; gzvfbwzwn--) {
			continue;
		}
	}
	if (14522 != 14522) {
		int qwsmtg;
		for (qwsmtg = 60; qwsmtg > 0; qwsmtg--) {
			continue;
		}
	}
	if (14522 == 14522) {
		int kjni;
		for (kjni = 51; kjni > 0; kjni--) {
			continue;
		}
	}
	if (1338 == 1338) {
		int horc;
		for (horc = 74; horc > 0; horc--) {
			continue;
		}
	}
	if (14522 != 14522) {
		int ajvgrzaux;
		for (ajvgrzaux = 3; ajvgrzaux > 0; ajvgrzaux--) {
			continue;
		}
	}
	return string("lxyiei");
}

void xmsykgr::vpyzvdezkv(bool nzkthpfjezpwcd) {
	double hlvjv = 12140;
	string tiwanlsotjaz = "vlwlxlgugrfohszvkqazhbqraohsusxpvyuxl";
	if (12140 == 12140) {
		int cjmbvwqr;
		for (cjmbvwqr = 15; cjmbvwqr > 0; cjmbvwqr--) {
			continue;
		}
	}
	if (string("vlwlxlgugrfohszvkqazhbqraohsusxpvyuxl") == string("vlwlxlgugrfohszvkqazhbqraohsusxpvyuxl")) {
		int xugwqg;
		for (xugwqg = 33; xugwqg > 0; xugwqg--) {
			continue;
		}
	}
	if (12140 == 12140) {
		int bbzvx;
		for (bbzvx = 13; bbzvx > 0; bbzvx--) {
			continue;
		}
	}
	if (12140 != 12140) {
		int qzupf;
		for (qzupf = 6; qzupf > 0; qzupf--) {
			continue;
		}
	}
	if (string("vlwlxlgugrfohszvkqazhbqraohsusxpvyuxl") == string("vlwlxlgugrfohszvkqazhbqraohsusxpvyuxl")) {
		int jz;
		for (jz = 50; jz > 0; jz--) {
			continue;
		}
	}

}

string xmsykgr::mqehgnhftsrnhpfntyyalp(int zunzvd, bool kqtwlckqykv, double bamzx) {
	bool cincsxkslougatb = false;
	double ddgimehowwtxmwq = 8812;
	int sogksiecrfelnh = 3510;
	int ajluocj = 347;
	double nnthkitg = 5363;
	if (8812 == 8812) {
		int vyc;
		for (vyc = 79; vyc > 0; vyc--) {
			continue;
		}
	}
	if (8812 == 8812) {
		int yfozxw;
		for (yfozxw = 39; yfozxw > 0; yfozxw--) {
			continue;
		}
	}
	if (347 != 347) {
		int ifcnig;
		for (ifcnig = 31; ifcnig > 0; ifcnig--) {
			continue;
		}
	}
	if (3510 == 3510) {
		int xutnri;
		for (xutnri = 44; xutnri > 0; xutnri--) {
			continue;
		}
	}
	return string("s");
}

string xmsykgr::pucuzlzjeylepwjipt(bool ialla, int ytfqnh, int mpzhoqblon, string drlhqztrmv) {
	string btevusvq = "rfuxmbcyccrnhtpsbcwijwp";
	string lpvyid = "bffncrrrsvlwiggmlrcztrggqosivavyahcitvupxabnpubfsxvqmbbvtnzarpvruwimd";
	int goqdvjpsmbboup = 1084;
	int bngffhhfcfwmf = 7790;
	return string("zytteaucqtpqqqgzjae");
}

bool xmsykgr::epozoiwhzpeffjvbz(double kdvfdxhuforwfh, int fiepbksbk, double tizlstldhsrhvhm, double spdmyonigunvid, bool epcoxt, bool agkhaxwcce, bool sykozugcix, int wcyzqniwgiocue, double tzjelmftdu, string jguohr) {
	string oneqww = "zfeoemoekylktejaxrdbhxmdopfztpxsbyhvuqvxkudnfqvsrhixfzrqsavhkelubwcnvyxgxwcrmo";
	bool tiawycjitch = true;
	double cmsghl = 15876;
	int oxkmmhpviaeeu = 571;
	return true;
}

void xmsykgr::ttwndxkrrsymtholny(int xgntmn, int pxlmwnnayqqecub, double ppojfetkpbhkn, bool bfqcywp, int xuolxaw, bool jmlerul, string nxcbfozoelq, int ssnmo, bool bexbpgfhww, int lkckuw) {
	string vwhqhsb = "zrlbbirfoxvspgvynvlhimkrq";
	bool thhnka = false;
	bool bazfyhjp = true;

}

bool xmsykgr::lhqwhwwoynsl() {
	string pfsvsqdcaree = "tldvckdbstdvyqhiyoyfmyixxoxezcwmvjsixaxpzqkuhmxynrphhsssikbukrnkzzfljbivxbm";
	bool enelthml = true;
	int fhjwrsadsij = 2882;
	double dqgwvjizrb = 12971;
	bool jggyphxdyjworl = false;
	bool evqfbp = false;
	bool jitozun = false;
	int adpfkqmzbxpuv = 688;
	string cobeciwabml = "dxyqarigyebzjpoyggyguhlgcmrynijmcedczvsdyltblzirkxbboujzsyntdxptdfvhahzcpjhvxjklcfy";
	int iezie = 2127;
	return false;
}

bool xmsykgr::nbucitmbfy(string cdyubfcur, string zxabb, int dsuyirpte, string mqaoqj, int gfpyjbgd, double aiwypzc, bool edtmhvt) {
	string dlcpwk = "mhvdzadzibwoaduutqzkadfycilwyfzbmpxkyuxdhbbohiyqytceiculcrpmrskkvh";
	int lhszjnsydc = 2707;
	string intnrikkpvjomf = "iutvzvmeuducptoogucuwcycnxdaamkptzkjuiohifpbrzeipwxosipjcrewqvch";
	bool atmlhlogofe = true;
	double ifadidbfnmnlvj = 4531;
	double eecvab = 1587;
	bool zcoflscjfz = true;
	return false;
}

int xmsykgr::bprlfkwslsz(int prycuqyvtanzgl, string cpxpmlejhc, bool vqthvlbxuzxrohb, double lxgktrlvbix, double cgnulwwf) {
	double uyumjxqcphy = 15201;
	int xcbvbtqkbkf = 481;
	int xnyxgednid = 3898;
	int knqrdfix = 4597;
	bool wqhnkom = false;
	bool wjolohwwmo = false;
	bool hnslktcyfe = false;
	if (false != false) {
		int ulm;
		for (ulm = 11; ulm > 0; ulm--) {
			continue;
		}
	}
	if (481 == 481) {
		int iuamfzzcp;
		for (iuamfzzcp = 93; iuamfzzcp > 0; iuamfzzcp--) {
			continue;
		}
	}
	return 88459;
}

xmsykgr::xmsykgr() {
	this->vpyzvdezkv(false);
	this->mqehgnhftsrnhpfntyyalp(6390, true, 12842);
	this->pucuzlzjeylepwjipt(true, 3717, 1440, string("xyuphcueqmscp"));
	this->epozoiwhzpeffjvbz(19600, 6587, 8787, 2794, false, true, false, 8709, 3274, string("woroxzoqolxwqtdosthcxvfnspcoezqmwxeuxauqz"));
	this->ttwndxkrrsymtholny(1788, 269, 26067, true, 4602, false, string("jtgjpisljynaefyysrmjjqryclbbysbhclugrsxueweregkugwumyuzglsqrkawmybwbe"), 170, false, 190);
	this->lhqwhwwoynsl();
	this->nbucitmbfy(string("angblatewkbrxljlaxbbuhbznrwkitirxnjcakzdxivbdyqwub"), string("tbzkfrpjfiwjdklfqlpykgzycqfeyonlwzuogychwyvwxwkeczqolgyocsbkmxmysoffgz"), 4984, string("inppnprvvatrpcatslinzkgprhjpdgsoymsypkyjudomdeeoqh"), 1167, 4880, true);
	this->bprlfkwslsz(1296, string("utlnafebksgbmwtsrxxiopehaboymjbkfqhdyajnctmtvpepbawrglzxuujvnacvittwcdjbgzgygcqfapfcuifhccjxwqlmgsc"), true, 2834, 58731);
	this->kpmicgxgpbiitwrorkszr(855, 54480, 1092);
	this->rzkwgzpmapv(string("ycimdggvgtsbshbdznjxifcgsrwyvckoowmaedhmscouutrbforfbonhmprholrriviqdzvjgaljyrmrjagiyyyvoetp"), 6371, false);
	this->jalfxpaognofwizlc(12497, string("aptcmtlakhjqscwwtbkoznlkdvvtncidjftopghoafldngoixpzvpvqhseyiyshs"));
	this->dtdgrrtabmnxpwwawxbeoyrk(24420);
	this->adhvhajcqhihwrzd(1170, 3370, 5044, 9319, string("asxsnxpesyztlxcsgjglphduitr"), string("qytbzcevctaztsqgwimateyjhcpjtaluxxmdhyvnyqvpiqihkzppczzcqpzynbtuvugrjjnnvlsojyatmpa"));
	this->rdemikbwfbvxfuj(2896);
	this->zrfgeynkjnxisontaorwt(3272, 1463, string("s"), 24901, 4376, 3363, string("ittigqaklzxnvevbrpovbcfzlijpgjkganwvykturbyqysyejgjuwuzvuxowvsblvwtngkcwgxpfyqhlvzjoegjnhzi"), 4826, 3532);
}


#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

class ruxmeqn {
public:
	int ypzdpptsazjle;
	bool wkketzploqxp;
	double foxkexkbhubuw;
	ruxmeqn();
	void joebyxwvulwuzgcdzkund(string fjpeqcshifw, string hgpmylywtdahpqd, int rwsdcjfaejs, double hinbyulyccu, bool rozwjkg, int gmgkesebox, int iesbmh, double rfjswhgkqyau);
	double jsmtfwvufwsfydrsogmyhfbe(string eoprocmbqyxw);
	bool dambhycosjejmtpngcvuav(string azghg);
	string jyvnmqqmiimclzvc(int ciydgbfmzx, string dkwszoovulinif, string dvdtjivwxbltkiu, int zghlvoux);

protected:
	bool ellbiejglnn;

	void fzqiwbecxvvtfivfabkyis(bool ikoyfeflv, int zwrjmcrsqmb, string tynfojktdudb, string pdbtm);
	double ezxpclfalskfudz(double zmknckmmvj, double sdafkvsvddb, string oamlcnfuwuk, bool gcbngdjhvovphj, double nkfqfbsiwv);
	int lqgnrmtnnacrwz(double wjxwife, double nrjmqpcil, double jkrptdop, string ouqfdakpjf, int fqgppyhynydeu, string gourcpqeznvkz, double iriczjnftbawyva, int ixyvkdgscpxf, string wcgof, int vahwgiqnvha);
	int pmbuwgeefaoknkkvvzdfeu(bool aiybsoposwtraq, string mduzpwcbarwatm, string tljyaf, int siyyupoibcior);

private:
	string dtxphkvzqu;

	int usrkbjffgo(double tbvtfogqqufli, int echieysv, bool zsxkz);
	bool lwjjezypgmbuojywzbfnc(bool ymyalahpgprbfg, bool mitznxsuywxp, bool yveduul);
	double phryswfcfzatfinheotssbv(double ritxcn, double eihjqs, string zjyudqf, string rxqfbfra, int kvlsjqccdkyv, int mqduvagzwhil, double leagkrkup, string zgjtq, int evmxsv, int atyodvkeshqxsy);
	void frmjkzmgqj();
	string uyiaxqyxzyeaoiqgsdhmljenf(double pqanzwzvcrpcebr, string stkhb, int hzxbrxv);
	void feawhffhmddpvwztnazm(double muflb, string lnrndsyia, double hmshntwbk, double znujbkythnzaw, double ikmjizrsy);
	int jefzqytcfsgklep(string wkmcuinfbjajgst, int eofvmeectciovoj, double zmzxhpf, string lejumcm, string ckpddrhta, int rlqjezekv);
	bool gkiaeabqdexfjwtgecpynhi(bool xxgwvwpdesj, int ybqupzghxkzkf, int ztuqjxfwssnw, bool ipcednlenxbb, bool jqersywxuf);

};


int ruxmeqn::usrkbjffgo(double tbvtfogqqufli, int echieysv, bool zsxkz) {
	int powqszqz = 3753;
	double koictbdnekbmyg = 10100;
	double ceqbxwlfgfcu = 75016;
	double ehwhgmthjbecrcr = 20532;
	bool aialulxp = true;
	if (75016 != 75016) {
		int eicevklaf;
		for (eicevklaf = 82; eicevklaf > 0; eicevklaf--) {
			continue;
		}
	}
	if (3753 != 3753) {
		int xg;
		for (xg = 99; xg > 0; xg--) {
			continue;
		}
	}
	if (3753 != 3753) {
		int qxjzoqrpnp;
		for (qxjzoqrpnp = 88; qxjzoqrpnp > 0; qxjzoqrpnp--) {
			continue;
		}
	}
	if (3753 != 3753) {
		int hoeyivuom;
		for (hoeyivuom = 11; hoeyivuom > 0; hoeyivuom--) {
			continue;
		}
	}
	return 89920;
}

bool ruxmeqn::lwjjezypgmbuojywzbfnc(bool ymyalahpgprbfg, bool mitznxsuywxp, bool yveduul) {
	bool wsxeok = false;
	int exkwgsz = 425;
	int xrpjvufct = 1065;
	string iaftdwgyuqoes = "rfrorbgwenmxsbnrdmdoysvwudvzmdt";
	int hryzucsjw = 5395;
	int efovv = 1413;
	int hmflbf = 353;
	if (1413 == 1413) {
		int gudgvesba;
		for (gudgvesba = 38; gudgvesba > 0; gudgvesba--) {
			continue;
		}
	}
	if (353 == 353) {
		int rosvylo;
		for (rosvylo = 77; rosvylo > 0; rosvylo--) {
			continue;
		}
	}
	return true;
}

double ruxmeqn::phryswfcfzatfinheotssbv(double ritxcn, double eihjqs, string zjyudqf, string rxqfbfra, int kvlsjqccdkyv, int mqduvagzwhil, double leagkrkup, string zgjtq, int evmxsv, int atyodvkeshqxsy) {
	bool inrkjax = true;
	string ektvhhcxs = "fbwxymjlxwylcxugjdcnmelgaqduukixozrrzwweslpklzspiatvephfxqkfsnuhtfjnnipobrvvoxwqfrouzwrhnsvvuu";
	double ucuqek = 3705;
	string fmzlpstls = "rolbmabeejcxkefwdrvvdqfxqhszemgnowvauazhcowkrtirgbxkikxdqlnxlwwepkcomskyrhsdqqgavrcxrz";
	double arueibyfvcvez = 48626;
	bool rocjysl = false;
	if (string("fbwxymjlxwylcxugjdcnmelgaqduukixozrrzwweslpklzspiatvephfxqkfsnuhtfjnnipobrvvoxwqfrouzwrhnsvvuu") == string("fbwxymjlxwylcxugjdcnmelgaqduukixozrrzwweslpklzspiatvephfxqkfsnuhtfjnnipobrvvoxwqfrouzwrhnsvvuu")) {
		int bfopm;
		for (bfopm = 14; bfopm > 0; bfopm--) {
			continue;
		}
	}
	if (false != false) {
		int jspbdreqpn;
		for (jspbdreqpn = 92; jspbdreqpn > 0; jspbdreqpn--) {
			continue;
		}
	}
	if (string("rolbmabeejcxkefwdrvvdqfxqhszemgnowvauazhcowkrtirgbxkikxdqlnxlwwepkcomskyrhsdqqgavrcxrz") == string("rolbmabeejcxkefwdrvvdqfxqhszemgnowvauazhcowkrtirgbxkikxdqlnxlwwepkcomskyrhsdqqgavrcxrz")) {
		int alj;
		for (alj = 33; alj > 0; alj--) {
			continue;
		}
	}
	return 87211;
}

void ruxmeqn::frmjkzmgqj() {
	string zlpcartp = "txmbgqofkukwnnignlbruejewrhdrrstuirvhwzaqdxtqpbobifyampbuyifhqwmkdhmyhhqjimnarfoqwasdgnjcvpcagzb";
	bool fgivhysifzy = false;
	bool ukwrmxtkhrj = false;
	double ywhpyjtyyacxhk = 787;
	bool qqcfstgwybkzbqc = true;
	int wxtwqznsznmw = 1259;
	if (1259 == 1259) {
		int htuzktntkb;
		for (htuzktntkb = 1; htuzktntkb > 0; htuzktntkb--) {
			continue;
		}
	}
	if (787 == 787) {
		int uxebzgqo;
		for (uxebzgqo = 96; uxebzgqo > 0; uxebzgqo--) {
			continue;
		}
	}

}

string ruxmeqn::uyiaxqyxzyeaoiqgsdhmljenf(double pqanzwzvcrpcebr, string stkhb, int hzxbrxv) {
	string axpdiihl = "gebjiuuo";
	return string("dvcqqhepkbpnnkhmjjt");
}

void ruxmeqn::feawhffhmddpvwztnazm(double muflb, string lnrndsyia, double hmshntwbk, double znujbkythnzaw, double ikmjizrsy) {
	double lddxkewyxnabff = 21094;
	double grrzhybuo = 1285;
	double xhodywdnnmac = 26226;

}

int ruxmeqn::jefzqytcfsgklep(string wkmcuinfbjajgst, int eofvmeectciovoj, double zmzxhpf, string lejumcm, string ckpddrhta, int rlqjezekv) {
	string enqwzcaecywifcj = "r";
	double bmgamvzehrlqomd = 21688;
	int rtibh = 675;
	string mwkvvedzaeh = "ukrrokksuxrxrccwybpwghwdhjklfeiyfloszjomdnptbrryibstihhbmqzcekoehbe";
	int whpmkipvs = 2929;
	bool xlbyojfas = false;
	double lcdfyfggfzl = 3872;
	string psosskzwp = "htgxdszrqgdckcugnobsctcifklbtzpxdprglzmsmljyoi";
	int lgeezmgujh = 1346;
	if (string("htgxdszrqgdckcugnobsctcifklbtzpxdprglzmsmljyoi") != string("htgxdszrqgdckcugnobsctcifklbtzpxdprglzmsmljyoi")) {
		int oiudsrfxw;
		for (oiudsrfxw = 23; oiudsrfxw > 0; oiudsrfxw--) {
			continue;
		}
	}
	if (string("r") == string("r")) {
		int icha;
		for (icha = 74; icha > 0; icha--) {
			continue;
		}
	}
	if (2929 != 2929) {
		int gyatu;
		for (gyatu = 98; gyatu > 0; gyatu--) {
			continue;
		}
	}
	if (false != false) {
		int xyqru;
		for (xyqru = 14; xyqru > 0; xyqru--) {
			continue;
		}
	}
	if (1346 != 1346) {
		int otqtalkpyb;
		for (otqtalkpyb = 45; otqtalkpyb > 0; otqtalkpyb--) {
			continue;
		}
	}
	return 27125;
}

bool ruxmeqn::gkiaeabqdexfjwtgecpynhi(bool xxgwvwpdesj, int ybqupzghxkzkf, int ztuqjxfwssnw, bool ipcednlenxbb, bool jqersywxuf) {
	double oxpilmtkx = 14142;
	bool fmmawhnirwgrkk = true;
	double kviseyzkvrnxxzx = 20025;
	double vivoesvvxl = 3227;
	bool utdsflgqb = true;
	int memei = 865;
	bool fvxywyxeafjvgnu = true;
	int fcodbnuhvypbo = 5824;
	if (true != true) {
		int czjvdp;
		for (czjvdp = 30; czjvdp > 0; czjvdp--) {
			continue;
		}
	}
	if (14142 != 14142) {
		int xycojukx;
		for (xycojukx = 93; xycojukx > 0; xycojukx--) {
			continue;
		}
	}
	if (true == true) {
		int ooj;
		for (ooj = 67; ooj > 0; ooj--) {
			continue;
		}
	}
	if (true == true) {
		int flfvvzxoey;
		for (flfvvzxoey = 76; flfvvzxoey > 0; flfvvzxoey--) {
			continue;
		}
	}
	return true;
}

void ruxmeqn::fzqiwbecxvvtfivfabkyis(bool ikoyfeflv, int zwrjmcrsqmb, string tynfojktdudb, string pdbtm) {
	bool hbujgcg = false;
	bool hdhprxafqqlr = true;
	int gyrvcgxnlqq = 1346;
	if (true == true) {
		int yfyd;
		for (yfyd = 100; yfyd > 0; yfyd--) {
			continue;
		}
	}
	if (false == false) {
		int fsr;
		for (fsr = 57; fsr > 0; fsr--) {
			continue;
		}
	}
	if (false == false) {
		int rokdjwrbmc;
		for (rokdjwrbmc = 61; rokdjwrbmc > 0; rokdjwrbmc--) {
			continue;
		}
	}

}

double ruxmeqn::ezxpclfalskfudz(double zmknckmmvj, double sdafkvsvddb, string oamlcnfuwuk, bool gcbngdjhvovphj, double nkfqfbsiwv) {
	return 53662;
}

int ruxmeqn::lqgnrmtnnacrwz(double wjxwife, double nrjmqpcil, double jkrptdop, string ouqfdakpjf, int fqgppyhynydeu, string gourcpqeznvkz, double iriczjnftbawyva, int ixyvkdgscpxf, string wcgof, int vahwgiqnvha) {
	string glynwbtuxlxnew = "zxbdbdqfztqmnasjqasxmosggbajgezaanrhnpkvxldfjhpfplxrqgrvmjrtnqwhvftypwclzvjimqgv";
	string ljyignckpeqsaok = "swljhrvgmffiwohd";
	bool qftkcnbmltczmm = true;
	string gljqfqfudx = "cvkq";
	bool khwachfx = false;
	bool nsuoresjduwdnu = true;
	bool mzonpnxftqb = true;
	int gasfxhu = 593;
	int cgtrejoedp = 43;
	double dfpsyx = 7525;
	if (true == true) {
		int ud;
		for (ud = 52; ud > 0; ud--) {
			continue;
		}
	}
	if (false == false) {
		int oz;
		for (oz = 34; oz > 0; oz--) {
			continue;
		}
	}
	if (7525 != 7525) {
		int crhk;
		for (crhk = 79; crhk > 0; crhk--) {
			continue;
		}
	}
	if (43 == 43) {
		int af;
		for (af = 74; af > 0; af--) {
			continue;
		}
	}
	if (string("swljhrvgmffiwohd") != string("swljhrvgmffiwohd")) {
		int pqakaxd;
		for (pqakaxd = 85; pqakaxd > 0; pqakaxd--) {
			continue;
		}
	}
	return 12072;
}

int ruxmeqn::pmbuwgeefaoknkkvvzdfeu(bool aiybsoposwtraq, string mduzpwcbarwatm, string tljyaf, int siyyupoibcior) {
	double njvhcy = 8020;
	bool rqmduedhw = true;
	int nssyf = 602;
	bool lmbpouukzrpkdz = true;
	double xwmnsjt = 19949;
	double lmoguwms = 11672;
	if (true != true) {
		int dqnm;
		for (dqnm = 47; dqnm > 0; dqnm--) {
			continue;
		}
	}
	return 88052;
}

void ruxmeqn::joebyxwvulwuzgcdzkund(string fjpeqcshifw, string hgpmylywtdahpqd, int rwsdcjfaejs, double hinbyulyccu, bool rozwjkg, int gmgkesebox, int iesbmh, double rfjswhgkqyau) {
	double uxunuxiufaopozy = 18839;
	string krtxlmzemaq = "xhcauhpezsweqrdpgxsozqbstpabvvyqxfhduygfgicdzzwkxvftcihkukkysoxytfxcu";
	string lovznbbkml = "ritsqtotlumfytzjmkhldhtbowecgyuthvzmzqcfuazhwvzdgsxwwqvbcogxgfktumeqqrsdrnnewanpznpjs";
	int tpyim = 3076;
	bool tcryumga = true;
	int wkqhahfdcdebsy = 5873;
	string plwioj = "jcuiyrtflbznmuecvcucrlhhucrtpldcqhzoytflqglzchhlbbxcflgujemcecuceeerzaulezcrqnlgmwfmk";
	string onbcsyndqxked = "wlqjyejsifpvkvfdmcinxibb";
	bool kvabjllkml = false;
	bool rgtbotyhzo = true;
	if (true != true) {
		int dsfkbuc;
		for (dsfkbuc = 22; dsfkbuc > 0; dsfkbuc--) {
			continue;
		}
	}
	if (string("jcuiyrtflbznmuecvcucrlhhucrtpldcqhzoytflqglzchhlbbxcflgujemcecuceeerzaulezcrqnlgmwfmk") != string("jcuiyrtflbznmuecvcucrlhhucrtpldcqhzoytflqglzchhlbbxcflgujemcecuceeerzaulezcrqnlgmwfmk")) {
		int kbqnoofl;
		for (kbqnoofl = 35; kbqnoofl > 0; kbqnoofl--) {
			continue;
		}
	}

}

double ruxmeqn::jsmtfwvufwsfydrsogmyhfbe(string eoprocmbqyxw) {
	return 44790;
}

bool ruxmeqn::dambhycosjejmtpngcvuav(string azghg) {
	double zisscxkopf = 49669;
	double suhkonfgx = 7285;
	double rbijlbis = 29453;
	double rajdxl = 57488;
	bool mamyruqzxjc = true;
	double iihqhcgm = 77204;
	if (77204 != 77204) {
		int ue;
		for (ue = 46; ue > 0; ue--) {
			continue;
		}
	}
	return false;
}

string ruxmeqn::jyvnmqqmiimclzvc(int ciydgbfmzx, string dkwszoovulinif, string dvdtjivwxbltkiu, int zghlvoux) {
	int ubjqgqbwdgeljf = 6329;
	int roydkrcsucfq = 5549;
	bool kxbvbjc = true;
	string bqpkzyxfsjiopns = "hadgblqk";
	bool gqsruwfcg = false;
	double geuyibvsvu = 3208;
	int znbzbeqesw = 43;
	double frvkjbk = 20261;
	string oqfyet = "";
	return string("msrbtbjskprjjzsqoxm");
}

ruxmeqn::ruxmeqn() {
	this->joebyxwvulwuzgcdzkund(string("yqhdhhyhrmbzeeugjcmumpzqofvvhsjcniocinriswgipy"), string("sdrziyqfoaj"), 8413, 40432, false, 6081, 29, 11560);
	this->jsmtfwvufwsfydrsogmyhfbe(string("wukthrhdfwchlfrjznvjhlulzrvzlookjplezdhweqqkloihgx"));
	this->dambhycosjejmtpngcvuav(string("mgganuzvrttjnkcenheddfaroeenuuzqnpdwbmrhlhwhqgqgrmlshxhgetlpfpneilxnaucvbsgsyloyitkt"));
	this->jyvnmqqmiimclzvc(1, string("nkmnxkscgirgexesfhdobwczbijcliqtsiuxrkygockireapgayefhechioztlxwdbvpwppekiaekgcykiczjhmvahcvqgewdwod"), string("rtiaqlalzpqtvdttvqliydybwsevwnaofulznzfac"), 2430);
	this->fzqiwbecxvvtfivfabkyis(true, 554, string("mdqmiawoqynoevaxbdjbpghcjezobahgjloiuqxbm"), string("blucywyyepxdmalsvikaawdcutgbdwtiyxrynzspjopffhztrmxembsqscvdemhwqzwsrratzzexywgtjpq"));
	this->ezxpclfalskfudz(38606, 6243, string("derakvioxqvszyxwmsewplzxuiyikemezvvpfwfb"), true, 4773);
	this->lqgnrmtnnacrwz(19943, 2476, 5833, string("jdtjybeindvcdbztbjatjoeex"), 4759, string("fdcoshsvqgkshkoeubrtkxskwljfvnmytvfdpgvhryblqiwqzuecrymzozejpgcjnzvvrvgnwfhncscu"), 22656, 77, string("aev"), 3361);
	this->pmbuwgeefaoknkkvvzdfeu(true, string("lmizuqoknooinctzjksplwdrjxhbjwmzfovubtrghbvijnklldqenyiyjqmitrjuwdrlyirypxxuizkhhkpkrunhfqnuclyookl"), string("l"), 897);
	this->usrkbjffgo(1359, 6602, false);
	this->lwjjezypgmbuojywzbfnc(false, true, true);
	this->phryswfcfzatfinheotssbv(4247, 13347, string("e"), string("zdtvmxtmhwkhybyvbieimkuovplepjeniebxd"), 1508, 2065, 534, string("lpyrhfnpvrdpr"), 1166, 1811);
	this->frmjkzmgqj();
	this->uyiaxqyxzyeaoiqgsdhmljenf(9727, string("bcrnnblubplwvghgwrdevofnffymgvwhmaieipeaulsfjzseckeisazxvycrzfpcjsd"), 618);
	this->feawhffhmddpvwztnazm(26850, string("psokiutsnsazuozupsaerheeozzqnrdlldhdnzgbrqldahdosnaauqyhgzxnztfcozstkdzymlkjjacivnbdoynsbvdv"), 30894, 26047, 49336);
	this->jefzqytcfsgklep(string("tugzvlvpqdvoqraeynscmujmhoiyjeliqk"), 752, 28024, string("fwkairohefgkbjbmptfvdcqgxkvrvjxhrkvtmesycopobtfyoewqlucwtamqgsagjh"), string("xnwlqghlnj"), 319);
	this->gkiaeabqdexfjwtgecpynhi(false, 4720, 1599, false, false);
}


#include <stdio.h>
#include <string>
#include <iostream>

using namespace std;

class egugcfv {
public:
	double ehjyswluxyc;
	egugcfv();
	double yklnaksdoszxesbpvpcaodoyx(double oljdlgf, double bqwwjdkv, string aihubpnomoxnc, int eqtsreqmfarnbsv, double jvrzdizf, string bwmdhqjlotcjepv, bool bvrinfjbb, bool poiuofeupwnw, int rhkjjypsu, int harqp);
	void trzovaboutaohwqukyutpu(string fvjhnolmhozzyx, string tggbtqh, double ellucicilw, int uaehdptdddajjie, bool eybsaljqv, bool mjthdjvbv, int rsvqcxnkjlkhk);
	int ubkyevvssoxvilhotbanrb(int puepjg, double nwdjbdz, string lxlehhdslcqdssi, int jbczmi, double dceub, int dsgdyh, double matkbhcedlsiobe, bool oqxdmquubwsnkon);
	void yodpllandldhbelfpuksbvz(string yiwaitdebggk, string nlliutdrcchlgdo, double istywith);
	void nlrrcskxoqqwmvhapnxgkpol(int qijkpmeugwk, string xizmusl, double nxwxxtiztdlheg, int fpevhjxhlpqo, int icpdpphhg, string iqvhqijyycomuy, string nrxidcsfkyabdr, double bodqpy, int ulccephmihixjg);

protected:
	double mncrzvwnqhyycqd;
	double xxqehyersgie;
	double kfwsabznmidvxru;
	int rewrfrpwlfhwfgu;
	string mkjofdjtvztunbz;

	bool ydpquueckxvqkjgtlsb(double gfvssnmihrm, bool hbrxlymqn);
	bool owtxtazvcgnug(bool cnzog, double strlfhh);

private:
	string ersmixpru;
	string oahlpfsriinugaa;
	string nnronwdszjzr;

	double xfehtjlzekbrh(bool pxlpp, bool vccejbacoa, int bbzswbunxwzeov, int sktiuruoagikbgq, double dtktkwyygwsvy, int wtqcflu);
	string exagplixvxjxqcdeenktz(string hibwvnxgosyk, int celvgfky, double wzponsgqcrsplp, double adulyzzix, int mtlxzi, int apkiujv, double twjqm);
	string scxjnzzxqirhyqrpjyib(double ocauxkb, string qiccpvtnvjklqqh, int ulamez, bool jtnrahzannfcqws, bool rgeitrcacj, string xauynivfejcjxjf, bool pzepqvywrat, bool fphkh, double hnkvztou);
	int vaudkvtjfzejv(double fccajl, double dmumkhpfe, double esuipfasqgohcj, double jwmupusmtweuqn, string aabiiknaeausk);
	int kwyzmkxozfypdjmmpktsg(bool hufuigf, string cqyfy, bool niizeyl, string thtmuiysbww);
	int gmtciqsbjpbpkwsy(double slmfmwbrbigw, string mwafsvlw, double ukpuubqprh);
	double zkapkeequvzorhfoel(string zsyqevbtwdt, string ojrjdprhr);
	string vwsefafilktmmabennyvw();
	double swkupadlghqcnbvsujs(string aglhpauanhlv, double ltkyqiii, string yotbtvommqy);
	int toiuppjydtedliwtvmhqzvjrb(double dwkjqmpjm, bool qwwkiqppnre, int waecxagoggrfmyp, int vhrflcfztrnjibc);

};


double egugcfv::xfehtjlzekbrh(bool pxlpp, bool vccejbacoa, int bbzswbunxwzeov, int sktiuruoagikbgq, double dtktkwyygwsvy, int wtqcflu) {
	string asupqanbdbvnyvc = "jsageef";
	double tgjvbsxakayzgr = 16514;
	int dtsmsjt = 4419;
	string ymwikm = "swgwqicdrxbzhncamgkatzqtdmnjejrxwdkkfbleklzfeotrzegjuku";
	string joxwlv = "hzzpwqplbzhyrsmeggraxvlwabpmdkhzosssiuotf";
	string cutxxscrnjwuccj = "uwuxedcuqwidpssekilawgnlrmbhvoewbuiaticndofvnrgtfmgaxnakuw";
	return 2780;
}

string egugcfv::exagplixvxjxqcdeenktz(string hibwvnxgosyk, int celvgfky, double wzponsgqcrsplp, double adulyzzix, int mtlxzi, int apkiujv, double twjqm) {
	double zdwicqxq = 31726;
	bool zslwhpr = false;
	bool givrygyw = true;
	string wnxtytuemtkczpa = "tcbnzsxhfvpfptprernzmhkqeitdbkibrhwsbhpvroudhatjuysykcturcfafhifywdnjehnqihizbwflqpxmxnw";
	int vzexgo = 2262;
	bool yvbijebnysedle = true;
	string vpbbfqqaugglja = "ykzesurypsatryugytbdauihoqfhslmuqylrckxzieczx";
	bool legywrqax = true;
	if (true != true) {
		int dvfmxathw;
		for (dvfmxathw = 84; dvfmxathw > 0; dvfmxathw--) {
			continue;
		}
	}
	if (string("tcbnzsxhfvpfptprernzmhkqeitdbkibrhwsbhpvroudhatjuysykcturcfafhifywdnjehnqihizbwflqpxmxnw") != string("tcbnzsxhfvpfptprernzmhkqeitdbkibrhwsbhpvroudhatjuysykcturcfafhifywdnjehnqihizbwflqpxmxnw")) {
		int awoks;
		for (awoks = 82; awoks > 0; awoks--) {
			continue;
		}
	}
	return string("evwxzyqwvfxe");
}

string egugcfv::scxjnzzxqirhyqrpjyib(double ocauxkb, string qiccpvtnvjklqqh, int ulamez, bool jtnrahzannfcqws, bool rgeitrcacj, string xauynivfejcjxjf, bool pzepqvywrat, bool fphkh, double hnkvztou) {
	int siaziqfio = 2045;
	double wgyzuaod = 14069;
	int ohjxpuqzneape = 4586;
	if (2045 != 2045) {
		int bnn;
		for (bnn = 25; bnn > 0; bnn--) {
			continue;
		}
	}
	if (2045 == 2045) {
		int npdvx;
		for (npdvx = 98; npdvx > 0; npdvx--) {
			continue;
		}
	}
	if (14069 == 14069) {
		int ig;
		for (ig = 98; ig > 0; ig--) {
			continue;
		}
	}
	if (4586 == 4586) {
		int ne;
		for (ne = 52; ne > 0; ne--) {
			continue;
		}
	}
	if (2045 == 2045) {
		int kxbosp;
		for (kxbosp = 96; kxbosp > 0; kxbosp--) {
			continue;
		}
	}
	return string("lxel");
}

int egugcfv::vaudkvtjfzejv(double fccajl, double dmumkhpfe, double esuipfasqgohcj, double jwmupusmtweuqn, string aabiiknaeausk) {
	return 91853;
}

int egugcfv::kwyzmkxozfypdjmmpktsg(bool hufuigf, string cqyfy, bool niizeyl, string thtmuiysbww) {
	bool fmajopxiuursbg = true;
	double yixtmjydqlo = 12774;
	bool dinqvkcgauvtzwo = true;
	bool hfzkekxigsy = true;
	int clnwl = 4323;
	int laeephxcyxncef = 1526;
	if (12774 == 12774) {
		int kdzdency;
		for (kdzdency = 99; kdzdency > 0; kdzdency--) {
			continue;
		}
	}
	if (true == true) {
		int bubxkohcs;
		for (bubxkohcs = 2; bubxkohcs > 0; bubxkohcs--) {
			continue;
		}
	}
	if (true == true) {
		int bndqvgef;
		for (bndqvgef = 68; bndqvgef > 0; bndqvgef--) {
			continue;
		}
	}
	if (1526 != 1526) {
		int qfptbkrq;
		for (qfptbkrq = 86; qfptbkrq > 0; qfptbkrq--) {
			continue;
		}
	}
	if (4323 != 4323) {
		int uqgzg;
		for (uqgzg = 40; uqgzg > 0; uqgzg--) {
			continue;
		}
	}
	return 86391;
}

int egugcfv::gmtciqsbjpbpkwsy(double slmfmwbrbigw, string mwafsvlw, double ukpuubqprh) {
	int ihkkrquwb = 6859;
	string itgppr = "ufyutydpdppqvgg";
	int jwontohgmb = 1716;
	double imbhpagczy = 12653;
	if (1716 != 1716) {
		int pbvekty;
		for (pbvekty = 85; pbvekty > 0; pbvekty--) {
			continue;
		}
	}
	if (string("ufyutydpdppqvgg") == string("ufyutydpdppqvgg")) {
		int bchgygqor;
		for (bchgygqor = 27; bchgygqor > 0; bchgygqor--) {
			continue;
		}
	}
	if (1716 == 1716) {
		int zoyoyzh;
		for (zoyoyzh = 91; zoyoyzh > 0; zoyoyzh--) {
			continue;
		}
	}
	if (6859 == 6859) {
		int yoax;
		for (yoax = 7; yoax > 0; yoax--) {
			continue;
		}
	}
	if (string("ufyutydpdppqvgg") != string("ufyutydpdppqvgg")) {
		int hwkasxlqm;
		for (hwkasxlqm = 85; hwkasxlqm > 0; hwkasxlqm--) {
			continue;
		}
	}
	return 73293;
}

double egugcfv::zkapkeequvzorhfoel(string zsyqevbtwdt, string ojrjdprhr) {
	bool dylslwqhwbjc = false;
	string thxqhddnhdhopo = "kkoloyjhftoerpycanegxrgsimlfqsmhdgljjrjvpqmahgr";
	string cevibackjl = "glqqdhsflmgsxuifxdbsiszvudjcxliqbozteijmrethcmrmyvnddxyxnrwmncxxgnykyngcclycvgushvdkazpyygspnvf";
	int rktqtqajr = 4292;
	bool kobnto = false;
	if (string("glqqdhsflmgsxuifxdbsiszvudjcxliqbozteijmrethcmrmyvnddxyxnrwmncxxgnykyngcclycvgushvdkazpyygspnvf") == string("glqqdhsflmgsxuifxdbsiszvudjcxliqbozteijmrethcmrmyvnddxyxnrwmncxxgnykyngcclycvgushvdkazpyygspnvf")) {
		int aonrbnhx;
		for (aonrbnhx = 100; aonrbnhx > 0; aonrbnhx--) {
			continue;
		}
	}
	if (string("kkoloyjhftoerpycanegxrgsimlfqsmhdgljjrjvpqmahgr") == string("kkoloyjhftoerpycanegxrgsimlfqsmhdgljjrjvpqmahgr")) {
		int ytoxojhapa;
		for (ytoxojhapa = 50; ytoxojhapa > 0; ytoxojhapa--) {
			continue;
		}
	}
	if (string("kkoloyjhftoerpycanegxrgsimlfqsmhdgljjrjvpqmahgr") != string("kkoloyjhftoerpycanegxrgsimlfqsmhdgljjrjvpqmahgr")) {
		int qnbrz;
		for (qnbrz = 0; qnbrz > 0; qnbrz--) {
			continue;
		}
	}
	if (4292 == 4292) {
		int vaivue;
		for (vaivue = 32; vaivue > 0; vaivue--) {
			continue;
		}
	}
	return 26672;
}

string egugcfv::vwsefafilktmmabennyvw() {
	bool dedfgfruvq = true;
	bool edsofepxc = false;
	bool xgismj = true;
	int eyirlaylakbjavh = 34;
	string uwpyjramn = "ahtwsbnipwcpaggxxkgqtidlmsgmyotokhkspixxgxrpxnxjzbptvqhvruhu";
	int lnsbmrplalojf = 6752;
	bool ardlnkfvg = false;
	bool flvzstw = true;
	string ntrqy = "rvvtbmmggscdnwxxgamlnwmwprrayxxfktafxbqkdbbevfylsuhszpvuybufnirlfrwpcjsngbmaqcdppeyfykbngwfwcvl";
	if (true != true) {
		int bg;
		for (bg = 96; bg > 0; bg--) {
			continue;
		}
	}
	if (true != true) {
		int uatsfuxef;
		for (uatsfuxef = 49; uatsfuxef > 0; uatsfuxef--) {
			continue;
		}
	}
	return string("vknnmplzkn");
}

double egugcfv::swkupadlghqcnbvsujs(string aglhpauanhlv, double ltkyqiii, string yotbtvommqy) {
	string hbadtqmfr = "ddomzsjxyisnqigsghkayalfdmkjrablzpyyhkdpppzlgwkctedpnmawrixvehiauiemowowse";
	string dswgct = "ujkvmnpvzowwkyfoeitfefdzjrmfcsfdisodmyygagxvahhxcadjcdyqzklspcrjqze";
	int ruhjbj = 2104;
	bool kbdpljtsakeidb = true;
	bool hjxuhgtazjrwoi = true;
	double ykipbmngon = 531;
	bool imikemtr = true;
	int olhdzvlqelc = 5606;
	if (string("ujkvmnpvzowwkyfoeitfefdzjrmfcsfdisodmyygagxvahhxcadjcdyqzklspcrjqze") != string("ujkvmnpvzowwkyfoeitfefdzjrmfcsfdisodmyygagxvahhxcadjcdyqzklspcrjqze")) {
		int axwzn;
		for (axwzn = 35; axwzn > 0; axwzn--) {
			continue;
		}
	}
	return 76141;
}

int egugcfv::toiuppjydtedliwtvmhqzvjrb(double dwkjqmpjm, bool qwwkiqppnre, int waecxagoggrfmyp, int vhrflcfztrnjibc) {
	int mwqypyyd = 4260;
	if (4260 != 4260) {
		int er;
		for (er = 89; er > 0; er--) {
			continue;
		}
	}
	if (4260 == 4260) {
		int ycczwqpukt;
		for (ycczwqpukt = 70; ycczwqpukt > 0; ycczwqpukt--) {
			continue;
		}
	}
	if (4260 != 4260) {
		int aaqjtbznr;
		for (aaqjtbznr = 66; aaqjtbznr > 0; aaqjtbznr--) {
			continue;
		}
	}
	if (4260 == 4260) {
		int rsvmdhqla;
		for (rsvmdhqla = 36; rsvmdhqla > 0; rsvmdhqla--) {
			continue;
		}
	}
	if (4260 == 4260) {
		int sivfw;
		for (sivfw = 0; sivfw > 0; sivfw--) {
			continue;
		}
	}
	return 89738;
}

bool egugcfv::ydpquueckxvqkjgtlsb(double gfvssnmihrm, bool hbrxlymqn) {
	double rdnuxxc = 3353;
	if (3353 != 3353) {
		int dq;
		for (dq = 3; dq > 0; dq--) {
			continue;
		}
	}
	if (3353 == 3353) {
		int ldbu;
		for (ldbu = 38; ldbu > 0; ldbu--) {
			continue;
		}
	}
	if (3353 == 3353) {
		int yuptflbax;
		for (yuptflbax = 20; yuptflbax > 0; yuptflbax--) {
			continue;
		}
	}
	if (3353 != 3353) {
		int ixgqzidpi;
		for (ixgqzidpi = 0; ixgqzidpi > 0; ixgqzidpi--) {
			continue;
		}
	}
	return true;
}

bool egugcfv::owtxtazvcgnug(bool cnzog, double strlfhh) {
	double iqthyktcio = 705;
	int tynurh = 573;
	double nbmkmfylgw = 14854;
	bool ejaeaxlwwkwaswb = true;
	double cjeiekyizxtthf = 4356;
	if (14854 != 14854) {
		int jbzcdlta;
		for (jbzcdlta = 88; jbzcdlta > 0; jbzcdlta--) {
			continue;
		}
	}
	if (705 != 705) {
		int sggrtcmzps;
		for (sggrtcmzps = 98; sggrtcmzps > 0; sggrtcmzps--) {
			continue;
		}
	}
	return true;
}

double egugcfv::yklnaksdoszxesbpvpcaodoyx(double oljdlgf, double bqwwjdkv, string aihubpnomoxnc, int eqtsreqmfarnbsv, double jvrzdizf, string bwmdhqjlotcjepv, bool bvrinfjbb, bool poiuofeupwnw, int rhkjjypsu, int harqp) {
	string loxrilwwgmfexv = "dedhekrcrwgmepibqrpyrngkkqofdwgdqifttrrrcgristdsyynkdatipzlrruqhmqm";
	int sdvxxisfzglbke = 651;
	double bpqoxusz = 24539;
	string yjrgnxktty = "latahrnobdsbzwsaygsooycqdfmwhvmyuqmmibxuvcbvkqkwwrbiktamvvixocfvfmsxcnpnmknyoolbsgwykbjoktpryvgdfugn";
	string xpzfriotjkjpul = "aiqeotqqeqayfj";
	bool awpayw = false;
	double lxhrym = 11001;
	return 70583;
}

void egugcfv::trzovaboutaohwqukyutpu(string fvjhnolmhozzyx, string tggbtqh, double ellucicilw, int uaehdptdddajjie, bool eybsaljqv, bool mjthdjvbv, int rsvqcxnkjlkhk) {
	string plktdzabmoi = "gqavwfcuniierwcyshrgdbokmvoubwwiyywvxstlznojsrijpvhgtrvsuerclbstoilcioalblqclbnkmw";
	int fnmmlidz = 3908;
	bool ceqtmpwmbyogi = false;
	if (string("gqavwfcuniierwcyshrgdbokmvoubwwiyywvxstlznojsrijpvhgtrvsuerclbstoilcioalblqclbnkmw") == string("gqavwfcuniierwcyshrgdbokmvoubwwiyywvxstlznojsrijpvhgtrvsuerclbstoilcioalblqclbnkmw")) {
		int dgz;
		for (dgz = 96; dgz > 0; dgz--) {
			continue;
		}
	}
	if (string("gqavwfcuniierwcyshrgdbokmvoubwwiyywvxstlznojsrijpvhgtrvsuerclbstoilcioalblqclbnkmw") != string("gqavwfcuniierwcyshrgdbokmvoubwwiyywvxstlznojsrijpvhgtrvsuerclbstoilcioalblqclbnkmw")) {
		int wrdjhuxu;
		for (wrdjhuxu = 10; wrdjhuxu > 0; wrdjhuxu--) {
			continue;
		}
	}
	if (3908 != 3908) {
		int ovlp;
		for (ovlp = 74; ovlp > 0; ovlp--) {
			continue;
		}
	}

}

int egugcfv::ubkyevvssoxvilhotbanrb(int puepjg, double nwdjbdz, string lxlehhdslcqdssi, int jbczmi, double dceub, int dsgdyh, double matkbhcedlsiobe, bool oqxdmquubwsnkon) {
	int wkccywkvvkuyd = 3590;
	double hfwtrbaudcuh = 3543;
	bool qisvn = true;
	string dwsasoxedxiuo = "wcrbycdeoyhofcjisjfaspadzgwacydaagollekanjvounugfuvqfhmabzojyqyrtjkvfckbhkhw";
	bool ziiskj = true;
	double ktbfohnzas = 45268;
	bool xdsuofml = false;
	string xqyqo = "icbiuanjpsppdvkivuestjnyunrmkniehcvn";
	if (true != true) {
		int fj;
		for (fj = 21; fj > 0; fj--) {
			continue;
		}
	}
	if (false != false) {
		int zjmkpuar;
		for (zjmkpuar = 17; zjmkpuar > 0; zjmkpuar--) {
			continue;
		}
	}
	if (3590 == 3590) {
		int gzde;
		for (gzde = 67; gzde > 0; gzde--) {
			continue;
		}
	}
	if (3543 == 3543) {
		int kwwgyguqjn;
		for (kwwgyguqjn = 99; kwwgyguqjn > 0; kwwgyguqjn--) {
			continue;
		}
	}
	if (45268 == 45268) {
		int qdln;
		for (qdln = 37; qdln > 0; qdln--) {
			continue;
		}
	}
	return 82913;
}

void egugcfv::yodpllandldhbelfpuksbvz(string yiwaitdebggk, string nlliutdrcchlgdo, double istywith) {
	double sywvudyvgrbfxx = 10589;
	if (10589 == 10589) {
		int ops;
		for (ops = 15; ops > 0; ops--) {
			continue;
		}
	}

}

void egugcfv::nlrrcskxoqqwmvhapnxgkpol(int qijkpmeugwk, string xizmusl, double nxwxxtiztdlheg, int fpevhjxhlpqo, int icpdpphhg, string iqvhqijyycomuy, string nrxidcsfkyabdr, double bodqpy, int ulccephmihixjg) {
	bool ahsyzc = true;
	int eggxlrstvx = 2062;
	bool bfglhdwst = true;
	string hekpxahxyxyqbh = "btspgomzinwfquueadngoyrchovzjhvjwkvssmohhezovwaxomdtuexkskn";
	double qhyphohxkeelx = 8072;

}

egugcfv::egugcfv() {
	this->yklnaksdoszxesbpvpcaodoyx(8865, 15632, string(""), 1623, 22414, string("bknytcvmnahjncldprhjzoowelgpzhyohbkemttdidjogabjqlfoqkjnhekqythxokyqswmnepnerijvktlovgmfujcqrktoxpxj"), false, false, 3368, 898);
	this->trzovaboutaohwqukyutpu(string("etywxktevrhiagkimjeyixwdkxnthnesnbilxmejxgalqnzkhgtzrxtkemm"), string("lfvkuyrmuldansqhugbslsracuuxnggbb"), 6343, 501, true, false, 7936);
	this->ubkyevvssoxvilhotbanrb(5143, 13548, string("qotmaoajtenef"), 731, 6039, 4757, 12226, true);
	this->yodpllandldhbelfpuksbvz(string("qem"), string("dvdpilbwaqdfazzlgxkkeqssldyipsaoqizfbqipthcksjyksoqowkaeqemhbzjerwsudfkqxyrigqcxy"), 42178);
	this->nlrrcskxoqqwmvhapnxgkpol(1237, string("nyrtpfqsnbylgbdepenlykdribctnybojbnxfxxfrtqmjeixkpvftkdnulpwqzgbu"), 56405, 884, 3990, string("xylxrvkqkmuhxytwskpgstpvegnbhvwjdiepnpjmzidxamjutvdhypfnmznuhxtun"), string("ijiptfrlqcljaknjeqmscoxorabmfiqqqjpmyvl"), 1625, 3928);
	this->ydpquueckxvqkjgtlsb(17248, true);
	this->owtxtazvcgnug(false, 15540);
	this->xfehtjlzekbrh(true, true, 11, 301, 5593, 4426);
	this->exagplixvxjxqcdeenktz(string("jnanhnxdikfynwuzielidssgreimuyfvcpxusermroxceljdcquabingfffldbujreqdcxatotorwb"), 1161, 1271, 58415, 422, 3591, 39774);
	this->scxjnzzxqirhyqrpjyib(26746, string("pmrsoxmonynkthntkrfrkoyyhrumdyijqmtiuehhgmukakofmglbocidlbxzgeptddohdnluquz"), 7153, true, false, string("kldpxqhfsgiw"), false, true, 197);
	this->vaudkvtjfzejv(245, 2045, 38889, 13846, string("ibibsjatyttlrvkmnihoxbmaodhnhyqgkrjyc"));
	this->kwyzmkxozfypdjmmpktsg(true, string("tnwbglkvdpffczmaelrkurjahe"), true, string("uapmnacemwvscrswhabrhseqrljccxffbbecouwplhnyyayrquadabwvpwvbaqa"));
	this->gmtciqsbjpbpkwsy(16640, string("odhcvianibbtzkmzximfkeyomkfyoycanhsdlucqxwbfwsoqgjczmhxxupsepabifnqncxgilhknfdbml"), 61671);
	this->zkapkeequvzorhfoel(string("wuryuwbmugkvwjmbnqrjzaimedqteimodhchlzbzimspahnfacskdkmucgospyv"), string("gziavavsjumzgtutbljmmqclrl"));
	this->vwsefafilktmmabennyvw();
	this->swkupadlghqcnbvsujs(string("noqfvxpivcoguoiuryfcifvzquxewlunpzwbcpeebb"), 15967, string("jexpmswgegibvxcdwzlpeyovjlsmcrvpjqsxdvqs"));
	this->toiuppjydtedliwtvmhqzvjrb(25181, false, 3993, 1998);
}


















































































































































































































































































